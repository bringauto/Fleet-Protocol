// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ExampleModule.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_ExampleModule_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ExampleModule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ExampleModule_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ExampleModule_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ExampleModule_2eproto;
namespace ExampleModule {
class BlinkerCommand;
struct BlinkerCommandDefaultTypeInternal;
extern BlinkerCommandDefaultTypeInternal _BlinkerCommand_default_instance_;
class BlinkerError;
struct BlinkerErrorDefaultTypeInternal;
extern BlinkerErrorDefaultTypeInternal _BlinkerError_default_instance_;
class BlinkerStatus;
struct BlinkerStatusDefaultTypeInternal;
extern BlinkerStatusDefaultTypeInternal _BlinkerStatus_default_instance_;
class LightsCommand;
struct LightsCommandDefaultTypeInternal;
extern LightsCommandDefaultTypeInternal _LightsCommand_default_instance_;
class LightsError;
struct LightsErrorDefaultTypeInternal;
extern LightsErrorDefaultTypeInternal _LightsError_default_instance_;
class LightsStatus;
struct LightsStatusDefaultTypeInternal;
extern LightsStatusDefaultTypeInternal _LightsStatus_default_instance_;
}  // namespace ExampleModule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ExampleModule {
enum BlinkerCommand_Command : int {
  BlinkerCommand_Command_TURN_ON = 0,
  BlinkerCommand_Command_TURN_OFF = 1,
  BlinkerCommand_Command_BlinkerCommand_Command_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BlinkerCommand_Command_BlinkerCommand_Command_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BlinkerCommand_Command_IsValid(int value);
extern const uint32_t BlinkerCommand_Command_internal_data_[];
constexpr BlinkerCommand_Command BlinkerCommand_Command_Command_MIN = static_cast<BlinkerCommand_Command>(0);
constexpr BlinkerCommand_Command BlinkerCommand_Command_Command_MAX = static_cast<BlinkerCommand_Command>(1);
constexpr int BlinkerCommand_Command_Command_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BlinkerCommand_Command_descriptor();
template <typename T>
const std::string& BlinkerCommand_Command_Name(T value) {
  static_assert(std::is_same<T, BlinkerCommand_Command>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Command_Name().");
  return BlinkerCommand_Command_Name(static_cast<BlinkerCommand_Command>(value));
}
template <>
inline const std::string& BlinkerCommand_Command_Name(BlinkerCommand_Command value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BlinkerCommand_Command_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BlinkerCommand_Command_Parse(absl::string_view name, BlinkerCommand_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BlinkerCommand_Command>(
      BlinkerCommand_Command_descriptor(), name, value);
}
enum LightsCommand_Command : int {
  LightsCommand_Command_PRESS = 0,
  LightsCommand_Command_LightsCommand_Command_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LightsCommand_Command_LightsCommand_Command_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LightsCommand_Command_IsValid(int value);
extern const uint32_t LightsCommand_Command_internal_data_[];
constexpr LightsCommand_Command LightsCommand_Command_Command_MIN = static_cast<LightsCommand_Command>(0);
constexpr LightsCommand_Command LightsCommand_Command_Command_MAX = static_cast<LightsCommand_Command>(0);
constexpr int LightsCommand_Command_Command_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
LightsCommand_Command_descriptor();
template <typename T>
const std::string& LightsCommand_Command_Name(T value) {
  static_assert(std::is_same<T, LightsCommand_Command>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Command_Name().");
  return LightsCommand_Command_Name(static_cast<LightsCommand_Command>(value));
}
template <>
inline const std::string& LightsCommand_Command_Name(LightsCommand_Command value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LightsCommand_Command_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool LightsCommand_Command_Parse(absl::string_view name, LightsCommand_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LightsCommand_Command>(
      LightsCommand_Command_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class LightsStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ExampleModule.LightsStatus) */ {
 public:
  inline LightsStatus() : LightsStatus(nullptr) {}
  ~LightsStatus() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightsStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline LightsStatus(const LightsStatus& from) : LightsStatus(nullptr, from) {}
  inline LightsStatus(LightsStatus&& from) noexcept
      : LightsStatus(nullptr, std::move(from)) {}
  inline LightsStatus& operator=(const LightsStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightsStatus& operator=(LightsStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightsStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightsStatus* internal_default_instance() {
    return reinterpret_cast<const LightsStatus*>(
        &_LightsStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LightsStatus& a, LightsStatus& b) { a.Swap(&b); }
  inline void Swap(LightsStatus* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightsStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightsStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LightsStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightsStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LightsStatus& from) { LightsStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightsStatus* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ExampleModule.LightsStatus"; }

 protected:
  explicit LightsStatus(::google::protobuf::Arena* arena);
  LightsStatus(::google::protobuf::Arena* arena, const LightsStatus& from);
  LightsStatus(::google::protobuf::Arena* arena, LightsStatus&& from) noexcept
      : LightsStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsOnFieldNumber = 1,
  };
  // bool isOn = 1 [features = {
  void clear_ison() ;
  bool ison() const;
  void set_ison(bool value);

  private:
  bool _internal_ison() const;
  void _internal_set_ison(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ExampleModule.LightsStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LightsStatus_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LightsStatus& from_msg);
    bool ison_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ExampleModule_2eproto;
};
// -------------------------------------------------------------------

class LightsError final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ExampleModule.LightsError) */ {
 public:
  inline LightsError() : LightsError(nullptr) {}
  ~LightsError() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightsError(
      ::google::protobuf::internal::ConstantInitialized);

  inline LightsError(const LightsError& from) : LightsError(nullptr, from) {}
  inline LightsError(LightsError&& from) noexcept
      : LightsError(nullptr, std::move(from)) {}
  inline LightsError& operator=(const LightsError& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightsError& operator=(LightsError&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightsError& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightsError* internal_default_instance() {
    return reinterpret_cast<const LightsError*>(
        &_LightsError_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LightsError& a, LightsError& b) { a.Swap(&b); }
  inline void Swap(LightsError* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightsError* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightsError* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LightsError>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightsError& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LightsError& from) { LightsError::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightsError* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ExampleModule.LightsError"; }

 protected:
  explicit LightsError(::google::protobuf::Arena* arena);
  LightsError(::google::protobuf::Arena* arena, const LightsError& from);
  LightsError(::google::protobuf::Arena* arena, LightsError&& from) noexcept
      : LightsError(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 1,
  };
  // string errorMessage = 1 [features = {
  void clear_errormessage() ;
  const std::string& errormessage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_errormessage(Arg_&& arg, Args_... args);
  std::string* mutable_errormessage();
  PROTOBUF_NODISCARD std::string* release_errormessage();
  void set_allocated_errormessage(std::string* value);

  private:
  const std::string& _internal_errormessage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_errormessage(
      const std::string& value);
  std::string* _internal_mutable_errormessage();

  public:
  // @@protoc_insertion_point(class_scope:ExampleModule.LightsError)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LightsError_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LightsError& from_msg);
    ::google::protobuf::internal::ArenaStringPtr errormessage_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ExampleModule_2eproto;
};
// -------------------------------------------------------------------

class LightsCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ExampleModule.LightsCommand) */ {
 public:
  inline LightsCommand() : LightsCommand(nullptr) {}
  ~LightsCommand() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightsCommand(
      ::google::protobuf::internal::ConstantInitialized);

  inline LightsCommand(const LightsCommand& from) : LightsCommand(nullptr, from) {}
  inline LightsCommand(LightsCommand&& from) noexcept
      : LightsCommand(nullptr, std::move(from)) {}
  inline LightsCommand& operator=(const LightsCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightsCommand& operator=(LightsCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightsCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightsCommand* internal_default_instance() {
    return reinterpret_cast<const LightsCommand*>(
        &_LightsCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LightsCommand& a, LightsCommand& b) { a.Swap(&b); }
  inline void Swap(LightsCommand* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightsCommand* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightsCommand* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LightsCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightsCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LightsCommand& from) { LightsCommand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightsCommand* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ExampleModule.LightsCommand"; }

 protected:
  explicit LightsCommand(::google::protobuf::Arena* arena);
  LightsCommand(::google::protobuf::Arena* arena, const LightsCommand& from);
  LightsCommand(::google::protobuf::Arena* arena, LightsCommand&& from) noexcept
      : LightsCommand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Command = LightsCommand_Command;
  static constexpr Command PRESS = LightsCommand_Command_PRESS;
  static inline bool Command_IsValid(int value) {
    return LightsCommand_Command_IsValid(value);
  }
  static constexpr Command Command_MIN = LightsCommand_Command_Command_MIN;
  static constexpr Command Command_MAX = LightsCommand_Command_Command_MAX;
  static constexpr int Command_ARRAYSIZE = LightsCommand_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Command_descriptor() {
    return LightsCommand_Command_descriptor();
  }
  template <typename T>
  static inline const std::string& Command_Name(T value) {
    return LightsCommand_Command_Name(value);
  }
  static inline bool Command_Parse(absl::string_view name, Command* value) {
    return LightsCommand_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kCommandFieldNumber = 1,
  };
  // .ExampleModule.LightsCommand.Command command = 1 [features = {
  void clear_command() ;
  ::ExampleModule::LightsCommand_Command command() const;
  void set_command(::ExampleModule::LightsCommand_Command value);

  private:
  ::ExampleModule::LightsCommand_Command _internal_command() const;
  void _internal_set_command(::ExampleModule::LightsCommand_Command value);

  public:
  // @@protoc_insertion_point(class_scope:ExampleModule.LightsCommand)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LightsCommand_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LightsCommand& from_msg);
    int command_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ExampleModule_2eproto;
};
// -------------------------------------------------------------------

class BlinkerStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ExampleModule.BlinkerStatus) */ {
 public:
  inline BlinkerStatus() : BlinkerStatus(nullptr) {}
  ~BlinkerStatus() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlinkerStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlinkerStatus(const BlinkerStatus& from) : BlinkerStatus(nullptr, from) {}
  inline BlinkerStatus(BlinkerStatus&& from) noexcept
      : BlinkerStatus(nullptr, std::move(from)) {}
  inline BlinkerStatus& operator=(const BlinkerStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlinkerStatus& operator=(BlinkerStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlinkerStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlinkerStatus* internal_default_instance() {
    return reinterpret_cast<const BlinkerStatus*>(
        &_BlinkerStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BlinkerStatus& a, BlinkerStatus& b) { a.Swap(&b); }
  inline void Swap(BlinkerStatus* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlinkerStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlinkerStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BlinkerStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlinkerStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlinkerStatus& from) { BlinkerStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlinkerStatus* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ExampleModule.BlinkerStatus"; }

 protected:
  explicit BlinkerStatus(::google::protobuf::Arena* arena);
  BlinkerStatus(::google::protobuf::Arena* arena, const BlinkerStatus& from);
  BlinkerStatus(::google::protobuf::Arena* arena, BlinkerStatus&& from) noexcept
      : BlinkerStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsFlashingFieldNumber = 1,
  };
  // bool isFlashing = 1 [features = {
  void clear_isflashing() ;
  bool isflashing() const;
  void set_isflashing(bool value);

  private:
  bool _internal_isflashing() const;
  void _internal_set_isflashing(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ExampleModule.BlinkerStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlinkerStatus_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlinkerStatus& from_msg);
    bool isflashing_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ExampleModule_2eproto;
};
// -------------------------------------------------------------------

class BlinkerError final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ExampleModule.BlinkerError) */ {
 public:
  inline BlinkerError() : BlinkerError(nullptr) {}
  ~BlinkerError() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlinkerError(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlinkerError(const BlinkerError& from) : BlinkerError(nullptr, from) {}
  inline BlinkerError(BlinkerError&& from) noexcept
      : BlinkerError(nullptr, std::move(from)) {}
  inline BlinkerError& operator=(const BlinkerError& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlinkerError& operator=(BlinkerError&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlinkerError& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlinkerError* internal_default_instance() {
    return reinterpret_cast<const BlinkerError*>(
        &_BlinkerError_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(BlinkerError& a, BlinkerError& b) { a.Swap(&b); }
  inline void Swap(BlinkerError* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlinkerError* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlinkerError* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BlinkerError>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlinkerError& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlinkerError& from) { BlinkerError::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlinkerError* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ExampleModule.BlinkerError"; }

 protected:
  explicit BlinkerError(::google::protobuf::Arena* arena);
  BlinkerError(::google::protobuf::Arena* arena, const BlinkerError& from);
  BlinkerError(::google::protobuf::Arena* arena, BlinkerError&& from) noexcept
      : BlinkerError(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 1,
  };
  // string errorMessage = 1 [features = {
  void clear_errormessage() ;
  const std::string& errormessage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_errormessage(Arg_&& arg, Args_... args);
  std::string* mutable_errormessage();
  PROTOBUF_NODISCARD std::string* release_errormessage();
  void set_allocated_errormessage(std::string* value);

  private:
  const std::string& _internal_errormessage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_errormessage(
      const std::string& value);
  std::string* _internal_mutable_errormessage();

  public:
  // @@protoc_insertion_point(class_scope:ExampleModule.BlinkerError)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlinkerError_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlinkerError& from_msg);
    ::google::protobuf::internal::ArenaStringPtr errormessage_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ExampleModule_2eproto;
};
// -------------------------------------------------------------------

class BlinkerCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ExampleModule.BlinkerCommand) */ {
 public:
  inline BlinkerCommand() : BlinkerCommand(nullptr) {}
  ~BlinkerCommand() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlinkerCommand(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlinkerCommand(const BlinkerCommand& from) : BlinkerCommand(nullptr, from) {}
  inline BlinkerCommand(BlinkerCommand&& from) noexcept
      : BlinkerCommand(nullptr, std::move(from)) {}
  inline BlinkerCommand& operator=(const BlinkerCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlinkerCommand& operator=(BlinkerCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlinkerCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlinkerCommand* internal_default_instance() {
    return reinterpret_cast<const BlinkerCommand*>(
        &_BlinkerCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BlinkerCommand& a, BlinkerCommand& b) { a.Swap(&b); }
  inline void Swap(BlinkerCommand* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlinkerCommand* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlinkerCommand* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BlinkerCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlinkerCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlinkerCommand& from) { BlinkerCommand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlinkerCommand* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ExampleModule.BlinkerCommand"; }

 protected:
  explicit BlinkerCommand(::google::protobuf::Arena* arena);
  BlinkerCommand(::google::protobuf::Arena* arena, const BlinkerCommand& from);
  BlinkerCommand(::google::protobuf::Arena* arena, BlinkerCommand&& from) noexcept
      : BlinkerCommand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Command = BlinkerCommand_Command;
  static constexpr Command TURN_ON = BlinkerCommand_Command_TURN_ON;
  static constexpr Command TURN_OFF = BlinkerCommand_Command_TURN_OFF;
  static inline bool Command_IsValid(int value) {
    return BlinkerCommand_Command_IsValid(value);
  }
  static constexpr Command Command_MIN = BlinkerCommand_Command_Command_MIN;
  static constexpr Command Command_MAX = BlinkerCommand_Command_Command_MAX;
  static constexpr int Command_ARRAYSIZE = BlinkerCommand_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Command_descriptor() {
    return BlinkerCommand_Command_descriptor();
  }
  template <typename T>
  static inline const std::string& Command_Name(T value) {
    return BlinkerCommand_Command_Name(value);
  }
  static inline bool Command_Parse(absl::string_view name, Command* value) {
    return BlinkerCommand_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kCommandFieldNumber = 1,
  };
  // .ExampleModule.BlinkerCommand.Command command = 1 [features = {
  void clear_command() ;
  ::ExampleModule::BlinkerCommand_Command command() const;
  void set_command(::ExampleModule::BlinkerCommand_Command value);

  private:
  ::ExampleModule::BlinkerCommand_Command _internal_command() const;
  void _internal_set_command(::ExampleModule::BlinkerCommand_Command value);

  public:
  // @@protoc_insertion_point(class_scope:ExampleModule.BlinkerCommand)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlinkerCommand_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlinkerCommand& from_msg);
    int command_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ExampleModule_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BlinkerStatus

// bool isFlashing = 1 [features = {
inline void BlinkerStatus::clear_isflashing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isflashing_ = false;
}
inline bool BlinkerStatus::isflashing() const {
  // @@protoc_insertion_point(field_get:ExampleModule.BlinkerStatus.isFlashing)
  return _internal_isflashing();
}
inline void BlinkerStatus::set_isflashing(bool value) {
  _internal_set_isflashing(value);
  // @@protoc_insertion_point(field_set:ExampleModule.BlinkerStatus.isFlashing)
}
inline bool BlinkerStatus::_internal_isflashing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isflashing_;
}
inline void BlinkerStatus::_internal_set_isflashing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isflashing_ = value;
}

// -------------------------------------------------------------------

// LightsStatus

// bool isOn = 1 [features = {
inline void LightsStatus::clear_ison() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ison_ = false;
}
inline bool LightsStatus::ison() const {
  // @@protoc_insertion_point(field_get:ExampleModule.LightsStatus.isOn)
  return _internal_ison();
}
inline void LightsStatus::set_ison(bool value) {
  _internal_set_ison(value);
  // @@protoc_insertion_point(field_set:ExampleModule.LightsStatus.isOn)
}
inline bool LightsStatus::_internal_ison() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ison_;
}
inline void LightsStatus::_internal_set_ison(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ison_ = value;
}

// -------------------------------------------------------------------

// BlinkerCommand

// .ExampleModule.BlinkerCommand.Command command = 1 [features = {
inline void BlinkerCommand::clear_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_ = 0;
}
inline ::ExampleModule::BlinkerCommand_Command BlinkerCommand::command() const {
  // @@protoc_insertion_point(field_get:ExampleModule.BlinkerCommand.command)
  return _internal_command();
}
inline void BlinkerCommand::set_command(::ExampleModule::BlinkerCommand_Command value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:ExampleModule.BlinkerCommand.command)
}
inline ::ExampleModule::BlinkerCommand_Command BlinkerCommand::_internal_command() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ExampleModule::BlinkerCommand_Command>(_impl_.command_);
}
inline void BlinkerCommand::_internal_set_command(::ExampleModule::BlinkerCommand_Command value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_ = value;
}

// -------------------------------------------------------------------

// LightsCommand

// .ExampleModule.LightsCommand.Command command = 1 [features = {
inline void LightsCommand::clear_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_ = 0;
}
inline ::ExampleModule::LightsCommand_Command LightsCommand::command() const {
  // @@protoc_insertion_point(field_get:ExampleModule.LightsCommand.command)
  return _internal_command();
}
inline void LightsCommand::set_command(::ExampleModule::LightsCommand_Command value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:ExampleModule.LightsCommand.command)
}
inline ::ExampleModule::LightsCommand_Command LightsCommand::_internal_command() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ExampleModule::LightsCommand_Command>(_impl_.command_);
}
inline void LightsCommand::_internal_set_command(::ExampleModule::LightsCommand_Command value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_ = value;
}

// -------------------------------------------------------------------

// BlinkerError

// string errorMessage = 1 [features = {
inline void BlinkerError::clear_errormessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.ClearToEmpty();
}
inline const std::string& BlinkerError::errormessage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ExampleModule.BlinkerError.errorMessage)
  return _internal_errormessage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlinkerError::set_errormessage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ExampleModule.BlinkerError.errorMessage)
}
inline std::string* BlinkerError::mutable_errormessage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_errormessage();
  // @@protoc_insertion_point(field_mutable:ExampleModule.BlinkerError.errorMessage)
  return _s;
}
inline const std::string& BlinkerError::_internal_errormessage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errormessage_.Get();
}
inline void BlinkerError::_internal_set_errormessage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.Set(value, GetArena());
}
inline std::string* BlinkerError::_internal_mutable_errormessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.errormessage_.Mutable( GetArena());
}
inline std::string* BlinkerError::release_errormessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ExampleModule.BlinkerError.errorMessage)
  return _impl_.errormessage_.Release();
}
inline void BlinkerError::set_allocated_errormessage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.errormessage_.IsDefault()) {
          _impl_.errormessage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.BlinkerError.errorMessage)
}

// -------------------------------------------------------------------

// LightsError

// string errorMessage = 1 [features = {
inline void LightsError::clear_errormessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.ClearToEmpty();
}
inline const std::string& LightsError::errormessage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ExampleModule.LightsError.errorMessage)
  return _internal_errormessage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightsError::set_errormessage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ExampleModule.LightsError.errorMessage)
}
inline std::string* LightsError::mutable_errormessage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_errormessage();
  // @@protoc_insertion_point(field_mutable:ExampleModule.LightsError.errorMessage)
  return _s;
}
inline const std::string& LightsError::_internal_errormessage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errormessage_.Get();
}
inline void LightsError::_internal_set_errormessage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.Set(value, GetArena());
}
inline std::string* LightsError::_internal_mutable_errormessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.errormessage_.Mutable( GetArena());
}
inline std::string* LightsError::release_errormessage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ExampleModule.LightsError.errorMessage)
  return _impl_.errormessage_.Release();
}
inline void LightsError::set_allocated_errormessage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormessage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.errormessage_.IsDefault()) {
          _impl_.errormessage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.LightsError.errorMessage)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ExampleModule


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ExampleModule::BlinkerCommand_Command> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ExampleModule::BlinkerCommand_Command>() {
  return ::ExampleModule::BlinkerCommand_Command_descriptor();
}
template <>
struct is_proto_enum<::ExampleModule::LightsCommand_Command> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ExampleModule::LightsCommand_Command>() {
  return ::ExampleModule::LightsCommand_Command_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ExampleModule_2eproto_2epb_2eh
