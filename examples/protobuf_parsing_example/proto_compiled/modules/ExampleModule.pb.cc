// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/ExampleModule.proto

#include "modules/ExampleModule.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace ExampleModule {
constexpr ExampleStatus::ExampleStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr)
  , _oneof_case_{}{}
struct ExampleStatusDefaultTypeInternal {
  constexpr ExampleStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExampleStatusDefaultTypeInternal() {}
  union {
    ExampleStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExampleStatusDefaultTypeInternal _ExampleStatus_default_instance_;
constexpr ExampleCommand::ExampleCommand(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr)
  , _oneof_case_{}{}
struct ExampleCommandDefaultTypeInternal {
  constexpr ExampleCommandDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExampleCommandDefaultTypeInternal() {}
  union {
    ExampleCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExampleCommandDefaultTypeInternal _ExampleCommand_default_instance_;
constexpr ExampleError::ExampleError(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr)
  , _oneof_case_{}{}
struct ExampleErrorDefaultTypeInternal {
  constexpr ExampleErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExampleErrorDefaultTypeInternal() {}
  union {
    ExampleError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExampleErrorDefaultTypeInternal _ExampleError_default_instance_;
constexpr Device::Device(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , module_(0)

  , devicetype_(0)
{}
struct DeviceDefaultTypeInternal {
  constexpr DeviceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeviceDefaultTypeInternal() {}
  union {
    Device _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeviceDefaultTypeInternal _Device_default_instance_;
constexpr BlinkerStatus::BlinkerStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : isflashing_(false){}
struct BlinkerStatusDefaultTypeInternal {
  constexpr BlinkerStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlinkerStatusDefaultTypeInternal() {}
  union {
    BlinkerStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlinkerStatusDefaultTypeInternal _BlinkerStatus_default_instance_;
constexpr LightsStatus::LightsStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ison_(false){}
struct LightsStatusDefaultTypeInternal {
  constexpr LightsStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LightsStatusDefaultTypeInternal() {}
  union {
    LightsStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LightsStatusDefaultTypeInternal _LightsStatus_default_instance_;
constexpr BlinkerCommand::BlinkerCommand(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(0)
{}
struct BlinkerCommandDefaultTypeInternal {
  constexpr BlinkerCommandDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlinkerCommandDefaultTypeInternal() {}
  union {
    BlinkerCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlinkerCommandDefaultTypeInternal _BlinkerCommand_default_instance_;
constexpr LightsCommand::LightsCommand(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(0)
{}
struct LightsCommandDefaultTypeInternal {
  constexpr LightsCommandDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LightsCommandDefaultTypeInternal() {}
  union {
    LightsCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LightsCommandDefaultTypeInternal _LightsCommand_default_instance_;
constexpr BlinkerError::BlinkerError(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : errormessage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BlinkerErrorDefaultTypeInternal {
  constexpr BlinkerErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlinkerErrorDefaultTypeInternal() {}
  union {
    BlinkerError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlinkerErrorDefaultTypeInternal _BlinkerError_default_instance_;
constexpr LightsError::LightsError(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : errormessage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct LightsErrorDefaultTypeInternal {
  constexpr LightsErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LightsErrorDefaultTypeInternal() {}
  union {
    LightsError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LightsErrorDefaultTypeInternal _LightsError_default_instance_;
}  // namespace ExampleModule
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fExampleModule_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2fExampleModule_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fExampleModule_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fExampleModule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleStatus, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleStatus, device_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleStatus, DeviceStatusType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleCommand, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleCommand, device_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleCommand, DeviceCommandType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleError, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleError, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleError, device_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ExampleModule::ExampleError, DeviceErrorType_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::Device, module_),
  PROTOBUF_FIELD_OFFSET(::ExampleModule::Device, devicetype_),
  PROTOBUF_FIELD_OFFSET(::ExampleModule::Device, devicename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::BlinkerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::BlinkerStatus, isflashing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::LightsStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::LightsStatus, ison_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::BlinkerCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::BlinkerCommand, command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::LightsCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::LightsCommand, command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::BlinkerError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::BlinkerError, errormessage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::LightsError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExampleModule::LightsError, errormessage_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ExampleModule::ExampleStatus)},
  { 9, -1, sizeof(::ExampleModule::ExampleCommand)},
  { 18, -1, sizeof(::ExampleModule::ExampleError)},
  { 27, -1, sizeof(::ExampleModule::Device)},
  { 35, -1, sizeof(::ExampleModule::BlinkerStatus)},
  { 41, -1, sizeof(::ExampleModule::LightsStatus)},
  { 47, -1, sizeof(::ExampleModule::BlinkerCommand)},
  { 53, -1, sizeof(::ExampleModule::LightsCommand)},
  { 59, -1, sizeof(::ExampleModule::BlinkerError)},
  { 65, -1, sizeof(::ExampleModule::LightsError)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_ExampleStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_ExampleCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_ExampleError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_Device_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_BlinkerStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_LightsStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_BlinkerCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_LightsCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_BlinkerError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExampleModule::_LightsError_default_instance_),
};

const char descriptor_table_protodef_modules_2fExampleModule_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033modules/ExampleModule.proto\022\rExampleMo"
  "dule\"\266\001\n\rExampleStatus\022%\n\006device\030\001 \001(\0132\025"
  ".ExampleModule.Device\0225\n\rblinkerStatus\030\002"
  " \001(\0132\034.ExampleModule.BlinkerStatusH\000\0223\n\014"
  "lightsStatus\030\003 \001(\0132\033.ExampleModule.Light"
  "sStatusH\000B\022\n\020DeviceStatusType\"\274\001\n\016Exampl"
  "eCommand\022%\n\006device\030\001 \001(\0132\025.ExampleModule"
  ".Device\0227\n\016blinkerCommand\030\002 \001(\0132\035.Exampl"
  "eModule.BlinkerCommandH\000\0225\n\rlightsComman"
  "d\030\003 \001(\0132\034.ExampleModule.LightsCommandH\000B"
  "\023\n\021DeviceCommandType\"\260\001\n\014ExampleError\022%\n"
  "\006device\030\001 \001(\0132\025.ExampleModule.Device\0223\n\014"
  "blinkerError\030\002 \001(\0132\033.ExampleModule.Blink"
  "erErrorH\000\0221\n\013lightsError\030\003 \001(\0132\032.Example"
  "Module.LightsErrorH\000B\021\n\017DeviceErrorType\""
  "\342\001\n\006Device\022,\n\006module\030\001 \001(\0162\034.ExampleModu"
  "le.Device.Module\0224\n\ndeviceType\030\002 \001(\0162 .E"
  "xampleModule.Device.DeviceType\022\022\n\ndevice"
  "Name\030\003 \001(\t\"9\n\006Module\022\023\n\017RESERVED_MODULE\020"
  "\000\022\023\n\016EXAMPLE_MODULE\020\347\007\"\005\010\001\020\346\007\"%\n\nDeviceT"
  "ype\022\013\n\007BLINKER\020\000\022\n\n\006LIGHTS\020\001\"#\n\rBlinkerS"
  "tatus\022\022\n\nisFlashing\030\001 \001(\010\"\034\n\014LightsStatu"
  "s\022\014\n\004isOn\030\001 \001(\010\"n\n\016BlinkerCommand\0226\n\007com"
  "mand\030\001 \001(\0162%.ExampleModule.BlinkerComman"
  "d.Command\"$\n\007Command\022\013\n\007TURN_ON\020\000\022\014\n\010TUR"
  "N_OFF\020\001\"\\\n\rLightsCommand\0225\n\007command\030\001 \001("
  "\0162$.ExampleModule.LightsCommand.Command\""
  "\024\n\007Command\022\t\n\005PRESS\020\000\"$\n\014BlinkerError\022\024\n"
  "\014errorMessage\030\001 \001(\t\"#\n\013LightsError\022\024\n\014er"
  "rorMessage\030\001 \001(\tB>Z!../internal/pkg/ba_p"
  "roto;ba_proto\252\002\030Google.Protobuf.ba_proto"
  "b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fExampleModule_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fExampleModule_2eproto = {
  false, false, 1248, descriptor_table_protodef_modules_2fExampleModule_2eproto, "modules/ExampleModule.proto", 
  &descriptor_table_modules_2fExampleModule_2eproto_once, nullptr, 0, 10,
  schemas, file_default_instances, TableStruct_modules_2fExampleModule_2eproto::offsets,
  file_level_metadata_modules_2fExampleModule_2eproto, file_level_enum_descriptors_modules_2fExampleModule_2eproto, file_level_service_descriptors_modules_2fExampleModule_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_modules_2fExampleModule_2eproto_getter() {
  return &descriptor_table_modules_2fExampleModule_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_modules_2fExampleModule_2eproto(&descriptor_table_modules_2fExampleModule_2eproto);
namespace ExampleModule {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Device_Module_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fExampleModule_2eproto);
  return file_level_enum_descriptors_modules_2fExampleModule_2eproto[0];
}
bool Device_Module_IsValid(int value) {
  switch (value) {
    case 0:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Device_Module Device::RESERVED_MODULE;
constexpr Device_Module Device::EXAMPLE_MODULE;
constexpr Device_Module Device::Module_MIN;
constexpr Device_Module Device::Module_MAX;
constexpr int Device::Module_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Device_DeviceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fExampleModule_2eproto);
  return file_level_enum_descriptors_modules_2fExampleModule_2eproto[1];
}
bool Device_DeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Device_DeviceType Device::BLINKER;
constexpr Device_DeviceType Device::LIGHTS;
constexpr Device_DeviceType Device::DeviceType_MIN;
constexpr Device_DeviceType Device::DeviceType_MAX;
constexpr int Device::DeviceType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BlinkerCommand_Command_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fExampleModule_2eproto);
  return file_level_enum_descriptors_modules_2fExampleModule_2eproto[2];
}
bool BlinkerCommand_Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr BlinkerCommand_Command BlinkerCommand::TURN_ON;
constexpr BlinkerCommand_Command BlinkerCommand::TURN_OFF;
constexpr BlinkerCommand_Command BlinkerCommand::Command_MIN;
constexpr BlinkerCommand_Command BlinkerCommand::Command_MAX;
constexpr int BlinkerCommand::Command_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LightsCommand_Command_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fExampleModule_2eproto);
  return file_level_enum_descriptors_modules_2fExampleModule_2eproto[3];
}
bool LightsCommand_Command_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LightsCommand_Command LightsCommand::PRESS;
constexpr LightsCommand_Command LightsCommand::Command_MIN;
constexpr LightsCommand_Command LightsCommand::Command_MAX;
constexpr int LightsCommand::Command_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class ExampleStatus::_Internal {
 public:
  static const ::ExampleModule::Device& device(const ExampleStatus* msg);
  static const ::ExampleModule::BlinkerStatus& blinkerstatus(const ExampleStatus* msg);
  static const ::ExampleModule::LightsStatus& lightsstatus(const ExampleStatus* msg);
};

const ::ExampleModule::Device&
ExampleStatus::_Internal::device(const ExampleStatus* msg) {
  return *msg->device_;
}
const ::ExampleModule::BlinkerStatus&
ExampleStatus::_Internal::blinkerstatus(const ExampleStatus* msg) {
  return *msg->DeviceStatusType_.blinkerstatus_;
}
const ::ExampleModule::LightsStatus&
ExampleStatus::_Internal::lightsstatus(const ExampleStatus* msg) {
  return *msg->DeviceStatusType_.lightsstatus_;
}
void ExampleStatus::set_allocated_blinkerstatus(::ExampleModule::BlinkerStatus* blinkerstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_DeviceStatusType();
  if (blinkerstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ExampleModule::BlinkerStatus>::GetOwningArena(blinkerstatus);
    if (message_arena != submessage_arena) {
      blinkerstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blinkerstatus, submessage_arena);
    }
    set_has_blinkerstatus();
    DeviceStatusType_.blinkerstatus_ = blinkerstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.ExampleStatus.blinkerStatus)
}
void ExampleStatus::set_allocated_lightsstatus(::ExampleModule::LightsStatus* lightsstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_DeviceStatusType();
  if (lightsstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ExampleModule::LightsStatus>::GetOwningArena(lightsstatus);
    if (message_arena != submessage_arena) {
      lightsstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lightsstatus, submessage_arena);
    }
    set_has_lightsstatus();
    DeviceStatusType_.lightsstatus_ = lightsstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.ExampleStatus.lightsStatus)
}
ExampleStatus::ExampleStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.ExampleStatus)
}
ExampleStatus::ExampleStatus(const ExampleStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::ExampleModule::Device(*from.device_);
  } else {
    device_ = nullptr;
  }
  clear_has_DeviceStatusType();
  switch (from.DeviceStatusType_case()) {
    case kBlinkerStatus: {
      _internal_mutable_blinkerstatus()->::ExampleModule::BlinkerStatus::MergeFrom(from._internal_blinkerstatus());
      break;
    }
    case kLightsStatus: {
      _internal_mutable_lightsstatus()->::ExampleModule::LightsStatus::MergeFrom(from._internal_lightsstatus());
      break;
    }
    case DEVICESTATUSTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ExampleModule.ExampleStatus)
}

inline void ExampleStatus::SharedCtor() {
device_ = nullptr;
clear_has_DeviceStatusType();
}

ExampleStatus::~ExampleStatus() {
  // @@protoc_insertion_point(destructor:ExampleModule.ExampleStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExampleStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
  if (has_DeviceStatusType()) {
    clear_DeviceStatusType();
  }
}

void ExampleStatus::ArenaDtor(void* object) {
  ExampleStatus* _this = reinterpret_cast< ExampleStatus* >(object);
  (void)_this;
}
void ExampleStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExampleStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExampleStatus::clear_DeviceStatusType() {
// @@protoc_insertion_point(one_of_clear_start:ExampleModule.ExampleStatus)
  switch (DeviceStatusType_case()) {
    case kBlinkerStatus: {
      if (GetArenaForAllocation() == nullptr) {
        delete DeviceStatusType_.blinkerstatus_;
      }
      break;
    }
    case kLightsStatus: {
      if (GetArenaForAllocation() == nullptr) {
        delete DeviceStatusType_.lightsstatus_;
      }
      break;
    }
    case DEVICESTATUSTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEVICESTATUSTYPE_NOT_SET;
}


void ExampleStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.ExampleStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  clear_DeviceStatusType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExampleStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ExampleModule.Device device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ExampleModule.BlinkerStatus blinkerStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_blinkerstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ExampleModule.LightsStatus lightsStatus = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lightsstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExampleStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.ExampleStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ExampleModule.Device device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  // .ExampleModule.BlinkerStatus blinkerStatus = 2;
  if (_internal_has_blinkerstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::blinkerstatus(this), target, stream);
  }

  // .ExampleModule.LightsStatus lightsStatus = 3;
  if (_internal_has_lightsstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::lightsstatus(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.ExampleStatus)
  return target;
}

size_t ExampleStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.ExampleStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ExampleModule.Device device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  switch (DeviceStatusType_case()) {
    // .ExampleModule.BlinkerStatus blinkerStatus = 2;
    case kBlinkerStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *DeviceStatusType_.blinkerstatus_);
      break;
    }
    // .ExampleModule.LightsStatus lightsStatus = 3;
    case kLightsStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *DeviceStatusType_.lightsstatus_);
      break;
    }
    case DEVICESTATUSTYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExampleStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExampleStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExampleStatus::GetClassData() const { return &_class_data_; }

void ExampleStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ExampleStatus *>(to)->MergeFrom(
      static_cast<const ExampleStatus &>(from));
}


void ExampleStatus::MergeFrom(const ExampleStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.ExampleStatus)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::ExampleModule::Device::MergeFrom(from._internal_device());
  }
  switch (from.DeviceStatusType_case()) {
    case kBlinkerStatus: {
      _internal_mutable_blinkerstatus()->::ExampleModule::BlinkerStatus::MergeFrom(from._internal_blinkerstatus());
      break;
    }
    case kLightsStatus: {
      _internal_mutable_lightsstatus()->::ExampleModule::LightsStatus::MergeFrom(from._internal_lightsstatus());
      break;
    }
    case DEVICESTATUSTYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExampleStatus::CopyFrom(const ExampleStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.ExampleStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExampleStatus::IsInitialized() const {
  return true;
}

void ExampleStatus::InternalSwap(ExampleStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(device_, other->device_);
  swap(DeviceStatusType_, other->DeviceStatusType_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExampleStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[0]);
}

// ===================================================================

class ExampleCommand::_Internal {
 public:
  static const ::ExampleModule::Device& device(const ExampleCommand* msg);
  static const ::ExampleModule::BlinkerCommand& blinkercommand(const ExampleCommand* msg);
  static const ::ExampleModule::LightsCommand& lightscommand(const ExampleCommand* msg);
};

const ::ExampleModule::Device&
ExampleCommand::_Internal::device(const ExampleCommand* msg) {
  return *msg->device_;
}
const ::ExampleModule::BlinkerCommand&
ExampleCommand::_Internal::blinkercommand(const ExampleCommand* msg) {
  return *msg->DeviceCommandType_.blinkercommand_;
}
const ::ExampleModule::LightsCommand&
ExampleCommand::_Internal::lightscommand(const ExampleCommand* msg) {
  return *msg->DeviceCommandType_.lightscommand_;
}
void ExampleCommand::set_allocated_blinkercommand(::ExampleModule::BlinkerCommand* blinkercommand) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_DeviceCommandType();
  if (blinkercommand) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ExampleModule::BlinkerCommand>::GetOwningArena(blinkercommand);
    if (message_arena != submessage_arena) {
      blinkercommand = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blinkercommand, submessage_arena);
    }
    set_has_blinkercommand();
    DeviceCommandType_.blinkercommand_ = blinkercommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.ExampleCommand.blinkerCommand)
}
void ExampleCommand::set_allocated_lightscommand(::ExampleModule::LightsCommand* lightscommand) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_DeviceCommandType();
  if (lightscommand) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ExampleModule::LightsCommand>::GetOwningArena(lightscommand);
    if (message_arena != submessage_arena) {
      lightscommand = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lightscommand, submessage_arena);
    }
    set_has_lightscommand();
    DeviceCommandType_.lightscommand_ = lightscommand;
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.ExampleCommand.lightsCommand)
}
ExampleCommand::ExampleCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.ExampleCommand)
}
ExampleCommand::ExampleCommand(const ExampleCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::ExampleModule::Device(*from.device_);
  } else {
    device_ = nullptr;
  }
  clear_has_DeviceCommandType();
  switch (from.DeviceCommandType_case()) {
    case kBlinkerCommand: {
      _internal_mutable_blinkercommand()->::ExampleModule::BlinkerCommand::MergeFrom(from._internal_blinkercommand());
      break;
    }
    case kLightsCommand: {
      _internal_mutable_lightscommand()->::ExampleModule::LightsCommand::MergeFrom(from._internal_lightscommand());
      break;
    }
    case DEVICECOMMANDTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ExampleModule.ExampleCommand)
}

inline void ExampleCommand::SharedCtor() {
device_ = nullptr;
clear_has_DeviceCommandType();
}

ExampleCommand::~ExampleCommand() {
  // @@protoc_insertion_point(destructor:ExampleModule.ExampleCommand)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExampleCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
  if (has_DeviceCommandType()) {
    clear_DeviceCommandType();
  }
}

void ExampleCommand::ArenaDtor(void* object) {
  ExampleCommand* _this = reinterpret_cast< ExampleCommand* >(object);
  (void)_this;
}
void ExampleCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExampleCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExampleCommand::clear_DeviceCommandType() {
// @@protoc_insertion_point(one_of_clear_start:ExampleModule.ExampleCommand)
  switch (DeviceCommandType_case()) {
    case kBlinkerCommand: {
      if (GetArenaForAllocation() == nullptr) {
        delete DeviceCommandType_.blinkercommand_;
      }
      break;
    }
    case kLightsCommand: {
      if (GetArenaForAllocation() == nullptr) {
        delete DeviceCommandType_.lightscommand_;
      }
      break;
    }
    case DEVICECOMMANDTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEVICECOMMANDTYPE_NOT_SET;
}


void ExampleCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.ExampleCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  clear_DeviceCommandType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExampleCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ExampleModule.Device device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ExampleModule.BlinkerCommand blinkerCommand = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_blinkercommand(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ExampleModule.LightsCommand lightsCommand = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lightscommand(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExampleCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.ExampleCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ExampleModule.Device device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  // .ExampleModule.BlinkerCommand blinkerCommand = 2;
  if (_internal_has_blinkercommand()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::blinkercommand(this), target, stream);
  }

  // .ExampleModule.LightsCommand lightsCommand = 3;
  if (_internal_has_lightscommand()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::lightscommand(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.ExampleCommand)
  return target;
}

size_t ExampleCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.ExampleCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ExampleModule.Device device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  switch (DeviceCommandType_case()) {
    // .ExampleModule.BlinkerCommand blinkerCommand = 2;
    case kBlinkerCommand: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *DeviceCommandType_.blinkercommand_);
      break;
    }
    // .ExampleModule.LightsCommand lightsCommand = 3;
    case kLightsCommand: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *DeviceCommandType_.lightscommand_);
      break;
    }
    case DEVICECOMMANDTYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExampleCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExampleCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExampleCommand::GetClassData() const { return &_class_data_; }

void ExampleCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ExampleCommand *>(to)->MergeFrom(
      static_cast<const ExampleCommand &>(from));
}


void ExampleCommand::MergeFrom(const ExampleCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.ExampleCommand)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::ExampleModule::Device::MergeFrom(from._internal_device());
  }
  switch (from.DeviceCommandType_case()) {
    case kBlinkerCommand: {
      _internal_mutable_blinkercommand()->::ExampleModule::BlinkerCommand::MergeFrom(from._internal_blinkercommand());
      break;
    }
    case kLightsCommand: {
      _internal_mutable_lightscommand()->::ExampleModule::LightsCommand::MergeFrom(from._internal_lightscommand());
      break;
    }
    case DEVICECOMMANDTYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExampleCommand::CopyFrom(const ExampleCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.ExampleCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExampleCommand::IsInitialized() const {
  return true;
}

void ExampleCommand::InternalSwap(ExampleCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(device_, other->device_);
  swap(DeviceCommandType_, other->DeviceCommandType_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExampleCommand::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[1]);
}

// ===================================================================

class ExampleError::_Internal {
 public:
  static const ::ExampleModule::Device& device(const ExampleError* msg);
  static const ::ExampleModule::BlinkerError& blinkererror(const ExampleError* msg);
  static const ::ExampleModule::LightsError& lightserror(const ExampleError* msg);
};

const ::ExampleModule::Device&
ExampleError::_Internal::device(const ExampleError* msg) {
  return *msg->device_;
}
const ::ExampleModule::BlinkerError&
ExampleError::_Internal::blinkererror(const ExampleError* msg) {
  return *msg->DeviceErrorType_.blinkererror_;
}
const ::ExampleModule::LightsError&
ExampleError::_Internal::lightserror(const ExampleError* msg) {
  return *msg->DeviceErrorType_.lightserror_;
}
void ExampleError::set_allocated_blinkererror(::ExampleModule::BlinkerError* blinkererror) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_DeviceErrorType();
  if (blinkererror) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ExampleModule::BlinkerError>::GetOwningArena(blinkererror);
    if (message_arena != submessage_arena) {
      blinkererror = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blinkererror, submessage_arena);
    }
    set_has_blinkererror();
    DeviceErrorType_.blinkererror_ = blinkererror;
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.ExampleError.blinkerError)
}
void ExampleError::set_allocated_lightserror(::ExampleModule::LightsError* lightserror) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_DeviceErrorType();
  if (lightserror) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::ExampleModule::LightsError>::GetOwningArena(lightserror);
    if (message_arena != submessage_arena) {
      lightserror = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lightserror, submessage_arena);
    }
    set_has_lightserror();
    DeviceErrorType_.lightserror_ = lightserror;
  }
  // @@protoc_insertion_point(field_set_allocated:ExampleModule.ExampleError.lightsError)
}
ExampleError::ExampleError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.ExampleError)
}
ExampleError::ExampleError(const ExampleError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::ExampleModule::Device(*from.device_);
  } else {
    device_ = nullptr;
  }
  clear_has_DeviceErrorType();
  switch (from.DeviceErrorType_case()) {
    case kBlinkerError: {
      _internal_mutable_blinkererror()->::ExampleModule::BlinkerError::MergeFrom(from._internal_blinkererror());
      break;
    }
    case kLightsError: {
      _internal_mutable_lightserror()->::ExampleModule::LightsError::MergeFrom(from._internal_lightserror());
      break;
    }
    case DEVICEERRORTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ExampleModule.ExampleError)
}

inline void ExampleError::SharedCtor() {
device_ = nullptr;
clear_has_DeviceErrorType();
}

ExampleError::~ExampleError() {
  // @@protoc_insertion_point(destructor:ExampleModule.ExampleError)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExampleError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
  if (has_DeviceErrorType()) {
    clear_DeviceErrorType();
  }
}

void ExampleError::ArenaDtor(void* object) {
  ExampleError* _this = reinterpret_cast< ExampleError* >(object);
  (void)_this;
}
void ExampleError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExampleError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExampleError::clear_DeviceErrorType() {
// @@protoc_insertion_point(one_of_clear_start:ExampleModule.ExampleError)
  switch (DeviceErrorType_case()) {
    case kBlinkerError: {
      if (GetArenaForAllocation() == nullptr) {
        delete DeviceErrorType_.blinkererror_;
      }
      break;
    }
    case kLightsError: {
      if (GetArenaForAllocation() == nullptr) {
        delete DeviceErrorType_.lightserror_;
      }
      break;
    }
    case DEVICEERRORTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEVICEERRORTYPE_NOT_SET;
}


void ExampleError::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.ExampleError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  clear_DeviceErrorType();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExampleError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ExampleModule.Device device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ExampleModule.BlinkerError blinkerError = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_blinkererror(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ExampleModule.LightsError lightsError = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_lightserror(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExampleError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.ExampleError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ExampleModule.Device device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  // .ExampleModule.BlinkerError blinkerError = 2;
  if (_internal_has_blinkererror()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::blinkererror(this), target, stream);
  }

  // .ExampleModule.LightsError lightsError = 3;
  if (_internal_has_lightserror()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::lightserror(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.ExampleError)
  return target;
}

size_t ExampleError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.ExampleError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ExampleModule.Device device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  switch (DeviceErrorType_case()) {
    // .ExampleModule.BlinkerError blinkerError = 2;
    case kBlinkerError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *DeviceErrorType_.blinkererror_);
      break;
    }
    // .ExampleModule.LightsError lightsError = 3;
    case kLightsError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *DeviceErrorType_.lightserror_);
      break;
    }
    case DEVICEERRORTYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExampleError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExampleError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExampleError::GetClassData() const { return &_class_data_; }

void ExampleError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ExampleError *>(to)->MergeFrom(
      static_cast<const ExampleError &>(from));
}


void ExampleError::MergeFrom(const ExampleError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.ExampleError)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::ExampleModule::Device::MergeFrom(from._internal_device());
  }
  switch (from.DeviceErrorType_case()) {
    case kBlinkerError: {
      _internal_mutable_blinkererror()->::ExampleModule::BlinkerError::MergeFrom(from._internal_blinkererror());
      break;
    }
    case kLightsError: {
      _internal_mutable_lightserror()->::ExampleModule::LightsError::MergeFrom(from._internal_lightserror());
      break;
    }
    case DEVICEERRORTYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExampleError::CopyFrom(const ExampleError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.ExampleError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExampleError::IsInitialized() const {
  return true;
}

void ExampleError::InternalSwap(ExampleError* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(device_, other->device_);
  swap(DeviceErrorType_, other->DeviceErrorType_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExampleError::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[2]);
}

// ===================================================================

class Device::_Internal {
 public:
};

Device::Device(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.Device)
}
Device::Device(const Device& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicename().empty()) {
    devicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicename(), 
      GetArenaForAllocation());
  }
  ::memcpy(&module_, &from.module_,
    static_cast<size_t>(reinterpret_cast<char*>(&devicetype_) -
    reinterpret_cast<char*>(&module_)) + sizeof(devicetype_));
  // @@protoc_insertion_point(copy_constructor:ExampleModule.Device)
}

inline void Device::SharedCtor() {
devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&module_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&devicetype_) -
    reinterpret_cast<char*>(&module_)) + sizeof(devicetype_));
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:ExampleModule.Device)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Device::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  devicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Device::ArenaDtor(void* object) {
  Device* _this = reinterpret_cast< Device* >(object);
  (void)_this;
}
void Device::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Device::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.Device)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicename_.ClearToEmpty();
  ::memset(&module_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&devicetype_) -
      reinterpret_cast<char*>(&module_)) + sizeof(devicetype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Device::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ExampleModule.Device.Module module = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_module(static_cast<::ExampleModule::Device_Module>(val));
        } else goto handle_unusual;
        continue;
      // .ExampleModule.Device.DeviceType deviceType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_devicetype(static_cast<::ExampleModule::Device_DeviceType>(val));
        } else goto handle_unusual;
        continue;
      // string deviceName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_devicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ExampleModule.Device.deviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Device::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.Device)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ExampleModule.Device.Module module = 1;
  if (this->_internal_module() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_module(), target);
  }

  // .ExampleModule.Device.DeviceType deviceType = 2;
  if (this->_internal_devicetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_devicetype(), target);
  }

  // string deviceName = 3;
  if (!this->_internal_devicename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicename().data(), static_cast<int>(this->_internal_devicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ExampleModule.Device.deviceName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_devicename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.Device)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceName = 3;
  if (!this->_internal_devicename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicename());
  }

  // .ExampleModule.Device.Module module = 1;
  if (this->_internal_module() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_module());
  }

  // .ExampleModule.Device.DeviceType deviceType = 2;
  if (this->_internal_devicetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_devicetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Device::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Device::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Device::GetClassData() const { return &_class_data_; }

void Device::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<Device *>(to)->MergeFrom(
      static_cast<const Device &>(from));
}


void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.Device)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_devicename().empty()) {
    _internal_set_devicename(from._internal_devicename());
  }
  if (from._internal_module() != 0) {
    _internal_set_module(from._internal_module());
  }
  if (from._internal_devicetype() != 0) {
    _internal_set_devicetype(from._internal_devicetype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::InternalSwap(Device* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &devicename_, GetArenaForAllocation(),
      &other->devicename_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Device, devicetype_)
      + sizeof(Device::devicetype_)
      - PROTOBUF_FIELD_OFFSET(Device, module_)>(
          reinterpret_cast<char*>(&module_),
          reinterpret_cast<char*>(&other->module_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Device::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[3]);
}

// ===================================================================

class BlinkerStatus::_Internal {
 public:
};

BlinkerStatus::BlinkerStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.BlinkerStatus)
}
BlinkerStatus::BlinkerStatus(const BlinkerStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  isflashing_ = from.isflashing_;
  // @@protoc_insertion_point(copy_constructor:ExampleModule.BlinkerStatus)
}

inline void BlinkerStatus::SharedCtor() {
isflashing_ = false;
}

BlinkerStatus::~BlinkerStatus() {
  // @@protoc_insertion_point(destructor:ExampleModule.BlinkerStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BlinkerStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BlinkerStatus::ArenaDtor(void* object) {
  BlinkerStatus* _this = reinterpret_cast< BlinkerStatus* >(object);
  (void)_this;
}
void BlinkerStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlinkerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlinkerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.BlinkerStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  isflashing_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlinkerStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isFlashing = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          isflashing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlinkerStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.BlinkerStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isFlashing = 1;
  if (this->_internal_isflashing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_isflashing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.BlinkerStatus)
  return target;
}

size_t BlinkerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.BlinkerStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool isFlashing = 1;
  if (this->_internal_isflashing() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlinkerStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BlinkerStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlinkerStatus::GetClassData() const { return &_class_data_; }

void BlinkerStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<BlinkerStatus *>(to)->MergeFrom(
      static_cast<const BlinkerStatus &>(from));
}


void BlinkerStatus::MergeFrom(const BlinkerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.BlinkerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_isflashing() != 0) {
    _internal_set_isflashing(from._internal_isflashing());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlinkerStatus::CopyFrom(const BlinkerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.BlinkerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlinkerStatus::IsInitialized() const {
  return true;
}

void BlinkerStatus::InternalSwap(BlinkerStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(isflashing_, other->isflashing_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlinkerStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[4]);
}

// ===================================================================

class LightsStatus::_Internal {
 public:
};

LightsStatus::LightsStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.LightsStatus)
}
LightsStatus::LightsStatus(const LightsStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ison_ = from.ison_;
  // @@protoc_insertion_point(copy_constructor:ExampleModule.LightsStatus)
}

inline void LightsStatus::SharedCtor() {
ison_ = false;
}

LightsStatus::~LightsStatus() {
  // @@protoc_insertion_point(destructor:ExampleModule.LightsStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LightsStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LightsStatus::ArenaDtor(void* object) {
  LightsStatus* _this = reinterpret_cast< LightsStatus* >(object);
  (void)_this;
}
void LightsStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LightsStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LightsStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.LightsStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ison_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LightsStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool isOn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ison_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LightsStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.LightsStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isOn = 1;
  if (this->_internal_ison() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_ison(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.LightsStatus)
  return target;
}

size_t LightsStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.LightsStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool isOn = 1;
  if (this->_internal_ison() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LightsStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LightsStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LightsStatus::GetClassData() const { return &_class_data_; }

void LightsStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<LightsStatus *>(to)->MergeFrom(
      static_cast<const LightsStatus &>(from));
}


void LightsStatus::MergeFrom(const LightsStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.LightsStatus)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ison() != 0) {
    _internal_set_ison(from._internal_ison());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LightsStatus::CopyFrom(const LightsStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.LightsStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightsStatus::IsInitialized() const {
  return true;
}

void LightsStatus::InternalSwap(LightsStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ison_, other->ison_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LightsStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[5]);
}

// ===================================================================

class BlinkerCommand::_Internal {
 public:
};

BlinkerCommand::BlinkerCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.BlinkerCommand)
}
BlinkerCommand::BlinkerCommand(const BlinkerCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:ExampleModule.BlinkerCommand)
}

inline void BlinkerCommand::SharedCtor() {
command_ = 0;
}

BlinkerCommand::~BlinkerCommand() {
  // @@protoc_insertion_point(destructor:ExampleModule.BlinkerCommand)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BlinkerCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BlinkerCommand::ArenaDtor(void* object) {
  BlinkerCommand* _this = reinterpret_cast< BlinkerCommand* >(object);
  (void)_this;
}
void BlinkerCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlinkerCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlinkerCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.BlinkerCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlinkerCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ExampleModule.BlinkerCommand.Command command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_command(static_cast<::ExampleModule::BlinkerCommand_Command>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlinkerCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.BlinkerCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ExampleModule.BlinkerCommand.Command command = 1;
  if (this->_internal_command() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.BlinkerCommand)
  return target;
}

size_t BlinkerCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.BlinkerCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ExampleModule.BlinkerCommand.Command command = 1;
  if (this->_internal_command() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_command());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlinkerCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BlinkerCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlinkerCommand::GetClassData() const { return &_class_data_; }

void BlinkerCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<BlinkerCommand *>(to)->MergeFrom(
      static_cast<const BlinkerCommand &>(from));
}


void BlinkerCommand::MergeFrom(const BlinkerCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.BlinkerCommand)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_command() != 0) {
    _internal_set_command(from._internal_command());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlinkerCommand::CopyFrom(const BlinkerCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.BlinkerCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlinkerCommand::IsInitialized() const {
  return true;
}

void BlinkerCommand::InternalSwap(BlinkerCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(command_, other->command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlinkerCommand::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[6]);
}

// ===================================================================

class LightsCommand::_Internal {
 public:
};

LightsCommand::LightsCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.LightsCommand)
}
LightsCommand::LightsCommand(const LightsCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_ = from.command_;
  // @@protoc_insertion_point(copy_constructor:ExampleModule.LightsCommand)
}

inline void LightsCommand::SharedCtor() {
command_ = 0;
}

LightsCommand::~LightsCommand() {
  // @@protoc_insertion_point(destructor:ExampleModule.LightsCommand)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LightsCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LightsCommand::ArenaDtor(void* object) {
  LightsCommand* _this = reinterpret_cast< LightsCommand* >(object);
  (void)_this;
}
void LightsCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LightsCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LightsCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.LightsCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LightsCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ExampleModule.LightsCommand.Command command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_command(static_cast<::ExampleModule::LightsCommand_Command>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LightsCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.LightsCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ExampleModule.LightsCommand.Command command = 1;
  if (this->_internal_command() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.LightsCommand)
  return target;
}

size_t LightsCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.LightsCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ExampleModule.LightsCommand.Command command = 1;
  if (this->_internal_command() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_command());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LightsCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LightsCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LightsCommand::GetClassData() const { return &_class_data_; }

void LightsCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<LightsCommand *>(to)->MergeFrom(
      static_cast<const LightsCommand &>(from));
}


void LightsCommand::MergeFrom(const LightsCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.LightsCommand)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_command() != 0) {
    _internal_set_command(from._internal_command());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LightsCommand::CopyFrom(const LightsCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.LightsCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightsCommand::IsInitialized() const {
  return true;
}

void LightsCommand::InternalSwap(LightsCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(command_, other->command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LightsCommand::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[7]);
}

// ===================================================================

class BlinkerError::_Internal {
 public:
};

BlinkerError::BlinkerError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.BlinkerError)
}
BlinkerError::BlinkerError(const BlinkerError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errormessage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_errormessage().empty()) {
    errormessage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errormessage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ExampleModule.BlinkerError)
}

inline void BlinkerError::SharedCtor() {
errormessage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BlinkerError::~BlinkerError() {
  // @@protoc_insertion_point(destructor:ExampleModule.BlinkerError)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BlinkerError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  errormessage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BlinkerError::ArenaDtor(void* object) {
  BlinkerError* _this = reinterpret_cast< BlinkerError* >(object);
  (void)_this;
}
void BlinkerError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlinkerError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlinkerError::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.BlinkerError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errormessage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlinkerError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string errorMessage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_errormessage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ExampleModule.BlinkerError.errorMessage"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlinkerError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.BlinkerError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string errorMessage = 1;
  if (!this->_internal_errormessage().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errormessage().data(), static_cast<int>(this->_internal_errormessage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ExampleModule.BlinkerError.errorMessage");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_errormessage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.BlinkerError)
  return target;
}

size_t BlinkerError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.BlinkerError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorMessage = 1;
  if (!this->_internal_errormessage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errormessage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlinkerError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BlinkerError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlinkerError::GetClassData() const { return &_class_data_; }

void BlinkerError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<BlinkerError *>(to)->MergeFrom(
      static_cast<const BlinkerError &>(from));
}


void BlinkerError::MergeFrom(const BlinkerError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.BlinkerError)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errormessage().empty()) {
    _internal_set_errormessage(from._internal_errormessage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlinkerError::CopyFrom(const BlinkerError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.BlinkerError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlinkerError::IsInitialized() const {
  return true;
}

void BlinkerError::InternalSwap(BlinkerError* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &errormessage_, GetArenaForAllocation(),
      &other->errormessage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BlinkerError::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[8]);
}

// ===================================================================

class LightsError::_Internal {
 public:
};

LightsError::LightsError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ExampleModule.LightsError)
}
LightsError::LightsError(const LightsError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errormessage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_errormessage().empty()) {
    errormessage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errormessage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ExampleModule.LightsError)
}

inline void LightsError::SharedCtor() {
errormessage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LightsError::~LightsError() {
  // @@protoc_insertion_point(destructor:ExampleModule.LightsError)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LightsError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  errormessage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LightsError::ArenaDtor(void* object) {
  LightsError* _this = reinterpret_cast< LightsError* >(object);
  (void)_this;
}
void LightsError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LightsError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LightsError::Clear() {
// @@protoc_insertion_point(message_clear_start:ExampleModule.LightsError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errormessage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LightsError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string errorMessage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_errormessage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ExampleModule.LightsError.errorMessage"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LightsError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExampleModule.LightsError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string errorMessage = 1;
  if (!this->_internal_errormessage().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errormessage().data(), static_cast<int>(this->_internal_errormessage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ExampleModule.LightsError.errorMessage");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_errormessage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExampleModule.LightsError)
  return target;
}

size_t LightsError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExampleModule.LightsError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorMessage = 1;
  if (!this->_internal_errormessage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errormessage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LightsError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LightsError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LightsError::GetClassData() const { return &_class_data_; }

void LightsError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<LightsError *>(to)->MergeFrom(
      static_cast<const LightsError &>(from));
}


void LightsError::MergeFrom(const LightsError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExampleModule.LightsError)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errormessage().empty()) {
    _internal_set_errormessage(from._internal_errormessage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LightsError::CopyFrom(const LightsError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExampleModule.LightsError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightsError::IsInitialized() const {
  return true;
}

void LightsError::InternalSwap(LightsError* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &errormessage_, GetArenaForAllocation(),
      &other->errormessage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LightsError::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fExampleModule_2eproto_getter, &descriptor_table_modules_2fExampleModule_2eproto_once,
      file_level_metadata_modules_2fExampleModule_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ExampleModule
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ExampleModule::ExampleStatus* Arena::CreateMaybeMessage< ::ExampleModule::ExampleStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::ExampleStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::ExampleCommand* Arena::CreateMaybeMessage< ::ExampleModule::ExampleCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::ExampleCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::ExampleError* Arena::CreateMaybeMessage< ::ExampleModule::ExampleError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::ExampleError >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::Device* Arena::CreateMaybeMessage< ::ExampleModule::Device >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::Device >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::BlinkerStatus* Arena::CreateMaybeMessage< ::ExampleModule::BlinkerStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::BlinkerStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::LightsStatus* Arena::CreateMaybeMessage< ::ExampleModule::LightsStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::LightsStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::BlinkerCommand* Arena::CreateMaybeMessage< ::ExampleModule::BlinkerCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::BlinkerCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::LightsCommand* Arena::CreateMaybeMessage< ::ExampleModule::LightsCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::LightsCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::BlinkerError* Arena::CreateMaybeMessage< ::ExampleModule::BlinkerError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::BlinkerError >(arena);
}
template<> PROTOBUF_NOINLINE ::ExampleModule::LightsError* Arena::CreateMaybeMessage< ::ExampleModule::LightsError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExampleModule::LightsError >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
