/**
 * Detailed description can be found at Module protocol
 * document located at our Google Disk
 * https://docs.google.com/document/d/1ts1DDmu5vxEagHPvB-IHTW-5ts06XoZTdIjUIOGylGo/
 *
 */

syntax = "proto3";

/*
 * Module protocol contains messages for module protocol control, specific module status, command and error messages can be found in modules folder
 */
package ModuleProtocol;
option go_package = "../internal/pkg/ba_proto;ba_proto";
option csharp_namespace = "Google.Protobuf.ba_proto";

/**
 * Device connect information.
 * Device connect message is used for establishing connection from module client to module server
 * send as first message from module client to module server
 */
message deviceConnect{
  /**
    * enum containing all known modules, can be appended with new modules without loosing backward compatibility
   */
  enum Module{
    /**
     * This is reserved place for a control module, which is default for devices that didn't set correct module
     * TODO will be implemented
     */
    RESERVED_MODULE = 0;
    // Sending missions with the information about the route and stops to the autonomy
    MISSION_MODULE = 1;
    // Control of car accessories
    CAR_ACCESSORY_MODULE = 2;

    /**
     * Numbers reserved for BringAuto
     */
    reserved 4 to 999;
  }
  /**
   * Which module have to be used for this device
   */
  Module module = 1;
  /**
   * Module specific device type, device should be supported by chosen module
   */
  int32 deviceType = 2;
  /**
   * Unique device name
   */
  string deviceName = 3;
  /**
   * Priority of device
   */
  int32 priority = 4;
}

/**
 * Device connect response information.
 * Device connect response message is used for establishing connection from module client to module server
 * send as response to deviceConnect message from module server to module client
 */
message deviceConnectResponse{
  /**
   * Indicates if connection was successful or which error occurred
   */
  enum ResponseType{
    /**
     * Connection successful
     */
    OK = 0;
    /**
     * Device with given name is already connected
     */
    ALREADY_CONNECTED = 1;
    /**
     * Module server does not support given module
     */
    MODULE_NOT_SUPPORTED = 2;
    /**
     * Module loaded by module server does not recognize given device type
     */
    DEVICE_NOT_SUPPORTED = 3;
    /**
     * Device of the same deviceType with higher priority is already connected
     */
    HIGHER_PRIORITY_ALREADY_CONNECTED = 4;
  }
  ResponseType responseType = 1;
}