/**
 * Detailed description can be found at Message structure
 * document located at our Google Disk
 */

/**
 * This example module contains devices Blinker and Lights.
 * For an example of the blinker behavior, there would be two distinct devices of type BLINKER, but one would be named
 * RightBlinker and would get command TURN_ON when the blinker lever would be pushed up.
 * The second one would be named LeftBlinker and would get the command TURN_ON when the lever would be pushed down.
 * Both would get TURN_OFF in the lever's neutral position.
 *
 * The LIGHTS device has only a button, which switches them on and off.
 */
syntax = "proto3";

package ExampleModule;
option go_package = "../internal/pkg/ba_proto;ba_proto";
option csharp_namespace = "Google.Protobuf.ba_proto";

/**
 * Example status information, contains status message of one of supported device
 * Example module specific status
 */
message ExampleStatus {
	/*
	 * Information about source device
	 */
	Device device = 1;
	/*
	 * Device specific status message
	 */
	oneof DeviceStatusType{
		BlinkerStatus blinkerStatus = 2;
		LightsStatus lightsStatus = 3;
	}
}

/**
 * Example command information, contains command message of one of supported device
 * Example module specific command
 */
message ExampleCommand {
	/*
	 * Information about target device
	 */
	Device device = 1;
	/*
	 * Device specific command message
	 */
	oneof DeviceCommandType{
		BlinkerCommand blinkerCommand = 2;
		LightsCommand lightsCommand = 3;
	}
}

/**
 * Example error information, contains error message of one of supported device
 * Example module specific error
 */
message ExampleError {
	/*
	 * Information about source device
	 */
	Device device = 1;
	/*
	 * Device specific error message
	 */
	oneof DeviceErrorType{
		BlinkerError blinkerError = 2;
		LightsError lightsError = 3;
	}
}

/*
 * Message contains information about device.
 * The message Device must always have the SAME structure, only the values of the enums DeviceType and Module are changing.
 */
message Device{
	/*
	 * Enum for specification to which module the messages should be forwarded by internal server.
	 * Must mirror the enum number in InternalProtocol.proto
	 * RESERVED_MODULE is default module taking control of unspecified messages.
	 */
	enum Module{
		RESERVED_MODULE = 0;
		reserved 1 to 998;
		EXAMPLE_MODULE = 999;
	}

	/*
	 * Enum contains all device types supported by module, when module client is connecting, set deviceType value according to this enum
	 */
	enum DeviceType{
		BLINKER = 0;
		LIGHTS = 1;
	}

	/**
   * This module will always be the same. Serves for internal client to forward message to the correct module.
   */
	Module module = 1;

	DeviceType deviceType = 2;
	/*
	 * Unique device name
	 */
	string deviceName = 3;
}

/////////////////////////////////////////////////////////////////

message BlinkerStatus{
	bool isFlashing = 1;
}

message LightsStatus{
	bool isOn = 1;
}

//////////////////////////////////////////////////

message BlinkerCommand{
	enum Command{
		TURN_ON = 0;
		TURN_OFF = 1;
	}
	Command command = 1;
}

message LightsCommand{
	enum Command{
		PRESS = 0;
	}
	Command command = 1;
}
//////////////////////////////////////////////////

message BlinkerError{
	string errorMessage = 1;
}

message LightsError{
	string errorMessage = 1;
}