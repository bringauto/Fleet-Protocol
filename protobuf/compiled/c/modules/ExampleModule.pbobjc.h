// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: modules/ExampleModule.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum BlinkerCommand_Command

typedef GPB_ENUM(BlinkerCommand_Command) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BlinkerCommand_Command_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BlinkerCommand_Command_TurnOn = 0,
  BlinkerCommand_Command_TurnOff = 1,
};

GPBEnumDescriptor *BlinkerCommand_Command_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BlinkerCommand_Command_IsValidValue(int32_t value);

#pragma mark - Enum LightsCommand_Command

typedef GPB_ENUM(LightsCommand_Command) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LightsCommand_Command_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LightsCommand_Command_Press = 0,
};

GPBEnumDescriptor *LightsCommand_Command_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LightsCommand_Command_IsValidValue(int32_t value);

#pragma mark - ExampleModuleRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ExampleModuleRoot : GPBRootObject
@end

#pragma mark - BlinkerStatus

typedef GPB_ENUM(BlinkerStatus_FieldNumber) {
  BlinkerStatus_FieldNumber_IsFlashing = 1,
};

GPB_FINAL @interface BlinkerStatus : GPBMessage

@property(nonatomic, readwrite) BOOL isFlashing;

@end

#pragma mark - LightsStatus

typedef GPB_ENUM(LightsStatus_FieldNumber) {
  LightsStatus_FieldNumber_IsOn = 1,
};

GPB_FINAL @interface LightsStatus : GPBMessage

@property(nonatomic, readwrite) BOOL isOn;

@end

#pragma mark - BlinkerCommand

typedef GPB_ENUM(BlinkerCommand_FieldNumber) {
  BlinkerCommand_FieldNumber_Command = 1,
};

GPB_FINAL @interface BlinkerCommand : GPBMessage

@property(nonatomic, readwrite) BlinkerCommand_Command command;

@end

/**
 * Fetches the raw value of a @c BlinkerCommand's @c command property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t BlinkerCommand_Command_RawValue(BlinkerCommand *message);
/**
 * Sets the raw value of an @c BlinkerCommand's @c command property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetBlinkerCommand_Command_RawValue(BlinkerCommand *message, int32_t value);

#pragma mark - LightsCommand

typedef GPB_ENUM(LightsCommand_FieldNumber) {
  LightsCommand_FieldNumber_Command = 1,
};

GPB_FINAL @interface LightsCommand : GPBMessage

@property(nonatomic, readwrite) LightsCommand_Command command;

@end

/**
 * Fetches the raw value of a @c LightsCommand's @c command property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LightsCommand_Command_RawValue(LightsCommand *message);
/**
 * Sets the raw value of an @c LightsCommand's @c command property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLightsCommand_Command_RawValue(LightsCommand *message, int32_t value);

#pragma mark - BlinkerError

typedef GPB_ENUM(BlinkerError_FieldNumber) {
  BlinkerError_FieldNumber_ErrorMessage = 1,
};

GPB_FINAL @interface BlinkerError : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - LightsError

typedef GPB_ENUM(LightsError_FieldNumber) {
  LightsError_FieldNumber_ErrorMessage = 1,
};

GPB_FINAL @interface LightsError : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
