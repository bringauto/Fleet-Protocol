// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: modules/MissionModule.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AutonomyStatus_Telemetry;
@class Position;
@class Station;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum AutonomyStatus_State

/**
 * *
 * Current state of the Car.
 **/
typedef GPB_ENUM(AutonomyStatus_State) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AutonomyStatus_State_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**
   * *
   * Car is in IDLE mode. Waiting for CarCommand message receive.
   * This state assume that the CarStatus::telemetry::speed is zero!
   **/
  AutonomyStatus_State_Idle = 0,

  /**
   * *
   * Car is driving (to the target stop).
   **/
  AutonomyStatus_State_Drive = 1,

  /**
   * *
   * Car is in the specified stop. It does not imply that the car is IDLE.
   * This state assume that the CarStatus::telemetry::speed is zero!
   **/
  AutonomyStatus_State_InStop = 2,

  /**
   * *
   * There is an Obstacle which will cause collision if not removed.
   * The transition from this state to another is defined by The Autonomy implementation.
   **/
  AutonomyStatus_State_Obstacle = 3,

  /**
   * *
   * Car is in an error state.
   * State reflects that the car is in critical condition and needs an assistance.
   * The transition from this state to another is defined by The Autonomy implementation.
   **/
  AutonomyStatus_State_Error = 4,
};

GPBEnumDescriptor *AutonomyStatus_State_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AutonomyStatus_State_IsValidValue(int32_t value);

#pragma mark - Enum AutonomyCommand_Action

/**
 * *
 * Action which the autonomy must take.
 * Received action has an immediate effect to the state of the car (CarStatus::state)
 * \@see MissionStatus::State
 **/
typedef GPB_ENUM(AutonomyCommand_Action) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  AutonomyCommand_Action_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**
   * *
   * No action performed. Used as a default value.
   * Does not interact with CarCommand::stops logic.
   **/
  AutonomyCommand_Action_NoAction = 0,

  /**
   * *
   * Stop The car!
   * Independent on content of CarCommands::stops
   **/
  AutonomyCommand_Action_Stop = 1,

  /**
   * *
   * Start the car!
   * If there are stops in CarCommands::stops the car shall start driving to the next stop.
   **/
  AutonomyCommand_Action_Start = 2,
};

GPBEnumDescriptor *AutonomyCommand_Action_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL AutonomyCommand_Action_IsValidValue(int32_t value);

#pragma mark - MissionModuleRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MissionModuleRoot : GPBRootObject
@end

#pragma mark - AutonomyStatus

typedef GPB_ENUM(AutonomyStatus_FieldNumber) {
  AutonomyStatus_FieldNumber_Telemetry = 1,
  AutonomyStatus_FieldNumber_State = 2,
  AutonomyStatus_FieldNumber_NextStop = 3,
};

/**
 *
 * Message sent by the autonomy, containing its telemetry information, state and next destination
 **/
GPB_FINAL @interface AutonomyStatus : GPBMessage

/**
 *
 * Information about the car position, speed and fuel level
 **/
@property(nonatomic, readwrite, strong, null_resettable) AutonomyStatus_Telemetry *telemetry;
/** Test to see if @c telemetry has been set. */
@property(nonatomic, readwrite) BOOL hasTelemetry;

/**
 * *
 * Current state. If not set Car is in the IDLE state!
 **/
@property(nonatomic, readwrite) AutonomyStatus_State state;

/**
 * *
 * Name of the stop as specified in CarCommand::stops.
 * will not be defined if there is no station in the mission
 **/
@property(nonatomic, readwrite, strong, null_resettable) Station *nextStop;
/** Test to see if @c nextStop has been set. */
@property(nonatomic, readwrite) BOOL hasNextStop;

@end

/**
 * Fetches the raw value of a @c AutonomyStatus's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AutonomyStatus_State_RawValue(AutonomyStatus *message);
/**
 * Sets the raw value of an @c AutonomyStatus's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAutonomyStatus_State_RawValue(AutonomyStatus *message, int32_t value);

#pragma mark - AutonomyStatus_Telemetry

typedef GPB_ENUM(AutonomyStatus_Telemetry_FieldNumber) {
  AutonomyStatus_Telemetry_FieldNumber_Speed = 1,
  AutonomyStatus_Telemetry_FieldNumber_Fuel = 2,
  AutonomyStatus_Telemetry_FieldNumber_Position = 3,
};

GPB_FINAL @interface AutonomyStatus_Telemetry : GPBMessage

/**
 * *
 * vehicle speed in [m/s]
 * - positive value implies Forward car moving,
 * - negative value implies Backward car moving,
 * - zero value implies that the car stays at a place.
 **/
@property(nonatomic, readwrite) double speed;

/**
 * *
 * Fuel of the car in percents.
 * - 0.0 means empty battery or tank,
 * - 1.0 means full battery or tank.
 * Interpolation between 0.0 and 1.0 must be linear!
 **/
@property(nonatomic, readwrite) double fuel;

/**
 * *
 * Car position in the global map (WGS84)
 **/
@property(nonatomic, readwrite, strong, null_resettable) Position *position;
/** Test to see if @c position has been set. */
@property(nonatomic, readwrite) BOOL hasPosition;

@end

#pragma mark - AutonomyCommand

typedef GPB_ENUM(AutonomyCommand_FieldNumber) {
  AutonomyCommand_FieldNumber_StopsArray = 1,
  AutonomyCommand_FieldNumber_Route = 2,
  AutonomyCommand_FieldNumber_Action = 3,
};

/**
 *
 * Command for the autonomy, containing Action and list of destinations where the autonomy should go.
 **/
GPB_FINAL @interface AutonomyCommand : GPBMessage

/**
 * *
 * List of stops where the car shall go. Car goes from one stop to another following the order specified by the list.
 * May be empty
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Station*> *stopsArray;
/** The number of items in @c stopsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger stopsArray_Count;

/**
 * *
 * Name of the route, that the autonomy will follow
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *route;

@property(nonatomic, readwrite) AutonomyCommand_Action action;

@end

/**
 * Fetches the raw value of a @c AutonomyCommand's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AutonomyCommand_Action_RawValue(AutonomyCommand *message);
/**
 * Sets the raw value of an @c AutonomyCommand's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAutonomyCommand_Action_RawValue(AutonomyCommand *message, int32_t value);

#pragma mark - AutonomyError

typedef GPB_ENUM(AutonomyError_FieldNumber) {
  AutonomyError_FieldNumber_FinishedStopsArray = 1,
};

/**
 *
 * Autonomy error message containing list of Stops that the autonomy has finished.
 * The server marks the stops of a mission as finished based on this list.
 **/
GPB_FINAL @interface AutonomyError : GPBMessage

/**
 * *
 * All stops, which were finished, when the server has been down
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Station*> *finishedStopsArray;
/** The number of items in @c finishedStopsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger finishedStopsArray_Count;

@end

#pragma mark - Station

typedef GPB_ENUM(Station_FieldNumber) {
  Station_FieldNumber_Name = 1,
  Station_FieldNumber_Position = 2,
};

/**
 * *
 * Stop on the route.
 **/
GPB_FINAL @interface Station : GPBMessage

/**
 * *
 * The name of the station.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * *
 * Position of the station
 **/
@property(nonatomic, readwrite, strong, null_resettable) Position *position;
/** Test to see if @c position has been set. */
@property(nonatomic, readwrite) BOOL hasPosition;

@end

#pragma mark - Position

typedef GPB_ENUM(Position_FieldNumber) {
  Position_FieldNumber_Latitude = 1,
  Position_FieldNumber_Longitude = 2,
  Position_FieldNumber_Altitude = 3,
};

/**
 *
 * GPS position
 **/
GPB_FINAL @interface Position : GPBMessage

/**
 * *
 * WGS84 latitude,
 **/
@property(nonatomic, readwrite) double latitude;

/**
 * *
 * WGS84 longitude
 **/
@property(nonatomic, readwrite) double longitude;

/**
 * *
 * altitude in [m]
 **/
@property(nonatomic, readwrite) double altitude;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
