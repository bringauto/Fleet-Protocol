// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ExternalProtocol.proto
// Protobuf C++ Version: 5.27.2

#include "ExternalProtocol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ExternalProtocol {

inline constexpr StatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::ExternalProtocol::StatusResponse_Type >(0)},
        messagecounter_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StatusResponse::StatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusResponseDefaultTypeInternal() {}
  union {
    StatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;

inline constexpr ConnectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::ExternalProtocol::ConnectResponse_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectResponse::ConnectResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConnectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectResponseDefaultTypeInternal() {}
  union {
    ConnectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectResponseDefaultTypeInternal _ConnectResponse_default_instance_;

inline constexpr CommandResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::ExternalProtocol::CommandResponse_Type >(0)},
        messagecounter_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommandResponse::CommandResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandResponseDefaultTypeInternal() {}
  union {
    CommandResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandResponseDefaultTypeInternal _CommandResponse_default_instance_;

inline constexpr Connect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vehiclename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Connect::Connect(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectDefaultTypeInternal() {}
  union {
    Connect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectDefaultTypeInternal _Connect_default_instance_;

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        errormessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        devicestatus_{nullptr},
        devicestate_{static_cast< ::ExternalProtocol::Status_DeviceState >(0)},
        messagecounter_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;

inline constexpr Command::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        devicecommand_{nullptr},
        messagecounter_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Command::Command(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandDefaultTypeInternal() {}
  union {
    Command _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandDefaultTypeInternal _Command_default_instance_;

inline constexpr ExternalServer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ExternalServer::ExternalServer(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExternalServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExternalServerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExternalServerDefaultTypeInternal() {}
  union {
    ExternalServer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExternalServerDefaultTypeInternal _ExternalServer_default_instance_;

inline constexpr ExternalClient::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ExternalClient::ExternalClient(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExternalClientDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExternalClientDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExternalClientDefaultTypeInternal() {}
  union {
    ExternalClient _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExternalClientDefaultTypeInternal _ExternalClient_default_instance_;
}  // namespace ExternalProtocol
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ExternalProtocol_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ExternalProtocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_ExternalProtocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalServer, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalServer, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalServer, _impl_.MessageType_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalClient, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalClient, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalClient, _impl_.MessageType_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Connect, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Connect, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Connect, _impl_.company_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Connect, _impl_.vehiclename_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Connect, _impl_.devices_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ConnectResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ConnectResponse, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ConnectResponse, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Status, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Status, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Status, _impl_.devicestate_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Status, _impl_.messagecounter_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Status, _impl_.devicestatus_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Status, _impl_.errormessage_),
        ~0u,
        ~0u,
        ~0u,
        1,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::StatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::StatusResponse, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::StatusResponse, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::StatusResponse, _impl_.messagecounter_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Command, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Command, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Command, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Command, _impl_.messagecounter_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::Command, _impl_.devicecommand_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::CommandResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::CommandResponse, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::CommandResponse, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::ExternalProtocol::CommandResponse, _impl_.messagecounter_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ExternalProtocol::ExternalServer)},
        {12, -1, -1, sizeof(::ExternalProtocol::ExternalClient)},
        {24, -1, -1, sizeof(::ExternalProtocol::Connect)},
        {36, -1, -1, sizeof(::ExternalProtocol::ConnectResponse)},
        {46, 59, -1, sizeof(::ExternalProtocol::Status)},
        {64, -1, -1, sizeof(::ExternalProtocol::StatusResponse)},
        {75, 86, -1, sizeof(::ExternalProtocol::Command)},
        {89, -1, -1, sizeof(::ExternalProtocol::CommandResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ExternalProtocol::_ExternalServer_default_instance_._instance,
    &::ExternalProtocol::_ExternalClient_default_instance_._instance,
    &::ExternalProtocol::_Connect_default_instance_._instance,
    &::ExternalProtocol::_ConnectResponse_default_instance_._instance,
    &::ExternalProtocol::_Status_default_instance_._instance,
    &::ExternalProtocol::_StatusResponse_default_instance_._instance,
    &::ExternalProtocol::_Command_default_instance_._instance,
    &::ExternalProtocol::_CommandResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ExternalProtocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026ExternalProtocol.proto\022\020ExternalProtoc"
    "ol\032\026InternalProtocol.proto\"\307\001\n\016ExternalS"
    "erver\022<\n\017connectResponse\030\001 \001(\0132!.Externa"
    "lProtocol.ConnectResponseH\000\022:\n\016statusRes"
    "ponse\030\002 \001(\0132 .ExternalProtocol.StatusRes"
    "ponseH\000\022,\n\007command\030\003 \001(\0132\031.ExternalProto"
    "col.CommandH\000B\r\n\013MessageType\"\267\001\n\016Externa"
    "lClient\022,\n\007connect\030\001 \001(\0132\031.ExternalProto"
    "col.ConnectH\000\022*\n\006status\030\002 \001(\0132\030.External"
    "Protocol.StatusH\000\022<\n\017commandResponse\030\003 \001"
    "(\0132!.ExternalProtocol.CommandResponseH\000B"
    "\r\n\013MessageType\"\202\001\n\007Connect\022\030\n\tsessionId\030"
    "\001 \001(\tB\005\252\001\002\010\002\022\026\n\007company\030\002 \001(\tB\005\252\001\002\010\002\022\032\n\013"
    "vehicleName\030\003 \001(\tB\005\252\001\002\010\002\022)\n\007devices\030\004 \003("
    "\0132\030.InternalProtocol.Device\"\214\001\n\017ConnectR"
    "esponse\022\030\n\tsessionId\030\001 \001(\tB\005\252\001\002\010\002\022;\n\004typ"
    "e\030\002 \001(\0162&.ExternalProtocol.ConnectRespon"
    "se.TypeB\005\252\001\002\010\002\"\"\n\004Type\022\006\n\002OK\020\000\022\022\n\016ALREAD"
    "Y_LOGGED\020\001\"\226\002\n\006Status\022\030\n\tsessionId\030\001 \001(\t"
    "B\005\252\001\002\010\002\022@\n\013deviceState\030\002 \001(\0162$.ExternalP"
    "rotocol.Status.DeviceStateB\005\252\001\002\010\002\022\035\n\016mes"
    "sageCounter\030\003 \001(\rB\005\252\001\002\010\002\0224\n\014deviceStatus"
    "\030\004 \001(\0132\036.InternalProtocol.DeviceStatus\022\024"
    "\n\014errorMessage\030\005 \001(\014\"E\n\013DeviceState\022\016\n\nC"
    "ONNECTING\020\000\022\013\n\007RUNNING\020\001\022\t\n\005ERROR\020\002\022\016\n\nD"
    "ISCONNECT\020\003\"\225\001\n\016StatusResponse\022\030\n\tsessio"
    "nId\030\001 \001(\tB\005\252\001\002\010\002\022:\n\004type\030\002 \001(\0162%.Externa"
    "lProtocol.StatusResponse.TypeB\005\252\001\002\010\002\022\035\n\016"
    "messageCounter\030\003 \001(\rB\005\252\001\002\010\002\"\016\n\004Type\022\006\n\002O"
    "K\020\000\"z\n\007Command\022\030\n\tsessionId\030\001 \001(\tB\005\252\001\002\010\002"
    "\022\035\n\016messageCounter\030\002 \001(\rB\005\252\001\002\010\002\0226\n\rdevic"
    "eCommand\030\003 \001(\0132\037.InternalProtocol.Device"
    "Command\"\340\001\n\017CommandResponse\022\030\n\tsessionId"
    "\030\001 \001(\tB\005\252\001\002\010\002\022;\n\004type\030\002 \001(\0162&.ExternalPr"
    "otocol.CommandResponse.TypeB\005\252\001\002\010\002\022\035\n\016me"
    "ssageCounter\030\003 \001(\rB\005\252\001\002\010\002\"W\n\004Type\022\006\n\002OK\020"
    "\000\022\030\n\024DEVICE_NOT_CONNECTED\020\001\022\030\n\024DEVICE_NO"
    "T_SUPPORTED\020\002\022\023\n\017INVALID_COMMAND\020\003B>Z!.."
    "/internal/pkg/ba_proto;ba_proto\252\002\030Google"
    ".Protobuf.ba_protob\010editionsp\350\007"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ExternalProtocol_2eproto_deps[1] =
    {
        &::descriptor_table_InternalProtocol_2eproto,
};
static ::absl::once_flag descriptor_table_ExternalProtocol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ExternalProtocol_2eproto = {
    false,
    false,
    1591,
    descriptor_table_protodef_ExternalProtocol_2eproto,
    "ExternalProtocol.proto",
    &descriptor_table_ExternalProtocol_2eproto_once,
    descriptor_table_ExternalProtocol_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_ExternalProtocol_2eproto::offsets,
    file_level_enum_descriptors_ExternalProtocol_2eproto,
    file_level_service_descriptors_ExternalProtocol_2eproto,
};
namespace ExternalProtocol {
const ::google::protobuf::EnumDescriptor* ConnectResponse_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ExternalProtocol_2eproto);
  return file_level_enum_descriptors_ExternalProtocol_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ConnectResponse_Type_internal_data_[] = {
    131072u, 0u, };
bool ConnectResponse_Type_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ConnectResponse_Type ConnectResponse::OK;
constexpr ConnectResponse_Type ConnectResponse::ALREADY_LOGGED;
constexpr ConnectResponse_Type ConnectResponse::Type_MIN;
constexpr ConnectResponse_Type ConnectResponse::Type_MAX;
constexpr int ConnectResponse::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Status_DeviceState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ExternalProtocol_2eproto);
  return file_level_enum_descriptors_ExternalProtocol_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Status_DeviceState_internal_data_[] = {
    262144u, 0u, };
bool Status_DeviceState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Status_DeviceState Status::CONNECTING;
constexpr Status_DeviceState Status::RUNNING;
constexpr Status_DeviceState Status::ERROR;
constexpr Status_DeviceState Status::DISCONNECT;
constexpr Status_DeviceState Status::DeviceState_MIN;
constexpr Status_DeviceState Status::DeviceState_MAX;
constexpr int Status::DeviceState_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* StatusResponse_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ExternalProtocol_2eproto);
  return file_level_enum_descriptors_ExternalProtocol_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t StatusResponse_Type_internal_data_[] = {
    65536u, 0u, };
bool StatusResponse_Type_IsValid(int value) {
  return 0 <= value && value <= 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StatusResponse_Type StatusResponse::OK;
constexpr StatusResponse_Type StatusResponse::Type_MIN;
constexpr StatusResponse_Type StatusResponse::Type_MAX;
constexpr int StatusResponse::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CommandResponse_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ExternalProtocol_2eproto);
  return file_level_enum_descriptors_ExternalProtocol_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t CommandResponse_Type_internal_data_[] = {
    262144u, 0u, };
bool CommandResponse_Type_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CommandResponse_Type CommandResponse::OK;
constexpr CommandResponse_Type CommandResponse::DEVICE_NOT_CONNECTED;
constexpr CommandResponse_Type CommandResponse::DEVICE_NOT_SUPPORTED;
constexpr CommandResponse_Type CommandResponse::INVALID_COMMAND;
constexpr CommandResponse_Type CommandResponse::Type_MIN;
constexpr CommandResponse_Type CommandResponse::Type_MAX;
constexpr int CommandResponse::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ExternalServer::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalServer, _impl_._oneof_case_);
};

void ExternalServer::set_allocated_connectresponse(::ExternalProtocol::ConnectResponse* connectresponse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (connectresponse) {
    ::google::protobuf::Arena* submessage_arena = connectresponse->GetArena();
    if (message_arena != submessage_arena) {
      connectresponse = ::google::protobuf::internal::GetOwnedMessage(message_arena, connectresponse, submessage_arena);
    }
    set_has_connectresponse();
    _impl_.MessageType_.connectresponse_ = connectresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:ExternalProtocol.ExternalServer.connectResponse)
}
void ExternalServer::set_allocated_statusresponse(::ExternalProtocol::StatusResponse* statusresponse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (statusresponse) {
    ::google::protobuf::Arena* submessage_arena = statusresponse->GetArena();
    if (message_arena != submessage_arena) {
      statusresponse = ::google::protobuf::internal::GetOwnedMessage(message_arena, statusresponse, submessage_arena);
    }
    set_has_statusresponse();
    _impl_.MessageType_.statusresponse_ = statusresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:ExternalProtocol.ExternalServer.statusResponse)
}
void ExternalServer::set_allocated_command(::ExternalProtocol::Command* command) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (command) {
    ::google::protobuf::Arena* submessage_arena = command->GetArena();
    if (message_arena != submessage_arena) {
      command = ::google::protobuf::internal::GetOwnedMessage(message_arena, command, submessage_arena);
    }
    set_has_command();
    _impl_.MessageType_.command_ = command;
  }
  // @@protoc_insertion_point(field_set_allocated:ExternalProtocol.ExternalServer.command)
}
ExternalServer::ExternalServer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.ExternalServer)
}
inline PROTOBUF_NDEBUG_INLINE ExternalServer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::ExternalServer& from_msg)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ExternalServer::ExternalServer(
    ::google::protobuf::Arena* arena,
    const ExternalServer& from)
    : ::google::protobuf::Message(arena) {
  ExternalServer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (MessageType_case()) {
    case MESSAGETYPE_NOT_SET:
      break;
      case kConnectResponse:
        _impl_.MessageType_.connectresponse_ = ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::ConnectResponse>(arena, *from._impl_.MessageType_.connectresponse_);
        break;
      case kStatusResponse:
        _impl_.MessageType_.statusresponse_ = ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::StatusResponse>(arena, *from._impl_.MessageType_.statusresponse_);
        break;
      case kCommand:
        _impl_.MessageType_.command_ = ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::Command>(arena, *from._impl_.MessageType_.command_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.ExternalServer)
}
inline PROTOBUF_NDEBUG_INLINE ExternalServer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ExternalServer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExternalServer::~ExternalServer() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.ExternalServer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExternalServer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_MessageType()) {
    clear_MessageType();
  }
  _impl_.~Impl_();
}

void ExternalServer::clear_MessageType() {
// @@protoc_insertion_point(one_of_clear_start:ExternalProtocol.ExternalServer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (MessageType_case()) {
    case kConnectResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.connectresponse_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.connectresponse_);
      }
      break;
    }
    case kStatusResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.statusresponse_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.statusresponse_);
      }
      break;
    }
    case kCommand: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.command_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.command_);
      }
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGETYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
ExternalServer::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ExternalServer, _impl_._cached_size_),
              false,
          },
          &ExternalServer::MergeImpl,
          &ExternalServer::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> ExternalServer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ExternalServer_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::ExternalServer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .ExternalProtocol.ConnectResponse connectResponse = 1;
    {PROTOBUF_FIELD_OFFSET(ExternalServer, _impl_.MessageType_.connectresponse_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ExternalProtocol.StatusResponse statusResponse = 2;
    {PROTOBUF_FIELD_OFFSET(ExternalServer, _impl_.MessageType_.statusresponse_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ExternalProtocol.Command command = 3;
    {PROTOBUF_FIELD_OFFSET(ExternalServer, _impl_.MessageType_.command_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ExternalProtocol::ConnectResponse>()},
    {::_pbi::TcParser::GetTable<::ExternalProtocol::StatusResponse>()},
    {::_pbi::TcParser::GetTable<::ExternalProtocol::Command>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExternalServer::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.ExternalServer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_MessageType();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ExternalServer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.ExternalServer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (MessageType_case()) {
    case kConnectResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.MessageType_.connectresponse_, _impl_.MessageType_.connectresponse_->GetCachedSize(), target, stream);
      break;
    }
    case kStatusResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.MessageType_.statusresponse_, _impl_.MessageType_.statusresponse_->GetCachedSize(), target, stream);
      break;
    }
    case kCommand: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.MessageType_.command_, _impl_.MessageType_.command_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.ExternalServer)
  return target;
}

::size_t ExternalServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.ExternalServer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (MessageType_case()) {
    // .ExternalProtocol.ConnectResponse connectResponse = 1;
    case kConnectResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.connectresponse_);
      break;
    }
    // .ExternalProtocol.StatusResponse statusResponse = 2;
    case kStatusResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.statusresponse_);
      break;
    }
    // .ExternalProtocol.Command command = 3;
    case kCommand: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.command_);
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ExternalServer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExternalServer*>(&to_msg);
  auto& from = static_cast<const ExternalServer&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.ExternalServer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_MessageType();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConnectResponse: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.connectresponse_ =
              ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::ConnectResponse>(arena, *from._impl_.MessageType_.connectresponse_);
        } else {
          _this->_impl_.MessageType_.connectresponse_->MergeFrom(from._internal_connectresponse());
        }
        break;
      }
      case kStatusResponse: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.statusresponse_ =
              ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::StatusResponse>(arena, *from._impl_.MessageType_.statusresponse_);
        } else {
          _this->_impl_.MessageType_.statusresponse_->MergeFrom(from._internal_statusresponse());
        }
        break;
      }
      case kCommand: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.command_ =
              ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::Command>(arena, *from._impl_.MessageType_.command_);
        } else {
          _this->_impl_.MessageType_.command_->MergeFrom(from._internal_command());
        }
        break;
      }
      case MESSAGETYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExternalServer::CopyFrom(const ExternalServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.ExternalServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExternalServer::InternalSwap(ExternalServer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.MessageType_, other->_impl_.MessageType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ExternalServer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExternalClient::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::ExternalProtocol::ExternalClient, _impl_._oneof_case_);
};

void ExternalClient::set_allocated_connect(::ExternalProtocol::Connect* connect) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (connect) {
    ::google::protobuf::Arena* submessage_arena = connect->GetArena();
    if (message_arena != submessage_arena) {
      connect = ::google::protobuf::internal::GetOwnedMessage(message_arena, connect, submessage_arena);
    }
    set_has_connect();
    _impl_.MessageType_.connect_ = connect;
  }
  // @@protoc_insertion_point(field_set_allocated:ExternalProtocol.ExternalClient.connect)
}
void ExternalClient::set_allocated_status(::ExternalProtocol::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (status) {
    ::google::protobuf::Arena* submessage_arena = status->GetArena();
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(message_arena, status, submessage_arena);
    }
    set_has_status();
    _impl_.MessageType_.status_ = status;
  }
  // @@protoc_insertion_point(field_set_allocated:ExternalProtocol.ExternalClient.status)
}
void ExternalClient::set_allocated_commandresponse(::ExternalProtocol::CommandResponse* commandresponse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (commandresponse) {
    ::google::protobuf::Arena* submessage_arena = commandresponse->GetArena();
    if (message_arena != submessage_arena) {
      commandresponse = ::google::protobuf::internal::GetOwnedMessage(message_arena, commandresponse, submessage_arena);
    }
    set_has_commandresponse();
    _impl_.MessageType_.commandresponse_ = commandresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:ExternalProtocol.ExternalClient.commandResponse)
}
ExternalClient::ExternalClient(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.ExternalClient)
}
inline PROTOBUF_NDEBUG_INLINE ExternalClient::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::ExternalClient& from_msg)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ExternalClient::ExternalClient(
    ::google::protobuf::Arena* arena,
    const ExternalClient& from)
    : ::google::protobuf::Message(arena) {
  ExternalClient* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (MessageType_case()) {
    case MESSAGETYPE_NOT_SET:
      break;
      case kConnect:
        _impl_.MessageType_.connect_ = ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::Connect>(arena, *from._impl_.MessageType_.connect_);
        break;
      case kStatus:
        _impl_.MessageType_.status_ = ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::Status>(arena, *from._impl_.MessageType_.status_);
        break;
      case kCommandResponse:
        _impl_.MessageType_.commandresponse_ = ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::CommandResponse>(arena, *from._impl_.MessageType_.commandresponse_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.ExternalClient)
}
inline PROTOBUF_NDEBUG_INLINE ExternalClient::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ExternalClient::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExternalClient::~ExternalClient() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.ExternalClient)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExternalClient::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_MessageType()) {
    clear_MessageType();
  }
  _impl_.~Impl_();
}

void ExternalClient::clear_MessageType() {
// @@protoc_insertion_point(one_of_clear_start:ExternalProtocol.ExternalClient)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (MessageType_case()) {
    case kConnect: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.connect_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.connect_);
      }
      break;
    }
    case kStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.status_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.status_);
      }
      break;
    }
    case kCommandResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.commandresponse_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.commandresponse_);
      }
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGETYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
ExternalClient::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ExternalClient, _impl_._cached_size_),
              false,
          },
          &ExternalClient::MergeImpl,
          &ExternalClient::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> ExternalClient::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ExternalClient_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::ExternalClient>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .ExternalProtocol.Connect connect = 1;
    {PROTOBUF_FIELD_OFFSET(ExternalClient, _impl_.MessageType_.connect_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ExternalProtocol.Status status = 2;
    {PROTOBUF_FIELD_OFFSET(ExternalClient, _impl_.MessageType_.status_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ExternalProtocol.CommandResponse commandResponse = 3;
    {PROTOBUF_FIELD_OFFSET(ExternalClient, _impl_.MessageType_.commandresponse_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ExternalProtocol::Connect>()},
    {::_pbi::TcParser::GetTable<::ExternalProtocol::Status>()},
    {::_pbi::TcParser::GetTable<::ExternalProtocol::CommandResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExternalClient::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.ExternalClient)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_MessageType();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ExternalClient::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.ExternalClient)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (MessageType_case()) {
    case kConnect: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.MessageType_.connect_, _impl_.MessageType_.connect_->GetCachedSize(), target, stream);
      break;
    }
    case kStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.MessageType_.status_, _impl_.MessageType_.status_->GetCachedSize(), target, stream);
      break;
    }
    case kCommandResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.MessageType_.commandresponse_, _impl_.MessageType_.commandresponse_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.ExternalClient)
  return target;
}

::size_t ExternalClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.ExternalClient)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (MessageType_case()) {
    // .ExternalProtocol.Connect connect = 1;
    case kConnect: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.connect_);
      break;
    }
    // .ExternalProtocol.Status status = 2;
    case kStatus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.status_);
      break;
    }
    // .ExternalProtocol.CommandResponse commandResponse = 3;
    case kCommandResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.commandresponse_);
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ExternalClient::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExternalClient*>(&to_msg);
  auto& from = static_cast<const ExternalClient&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.ExternalClient)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_MessageType();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConnect: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.connect_ =
              ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::Connect>(arena, *from._impl_.MessageType_.connect_);
        } else {
          _this->_impl_.MessageType_.connect_->MergeFrom(from._internal_connect());
        }
        break;
      }
      case kStatus: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.status_ =
              ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::Status>(arena, *from._impl_.MessageType_.status_);
        } else {
          _this->_impl_.MessageType_.status_->MergeFrom(from._internal_status());
        }
        break;
      }
      case kCommandResponse: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.commandresponse_ =
              ::google::protobuf::Message::CopyConstruct<::ExternalProtocol::CommandResponse>(arena, *from._impl_.MessageType_.commandresponse_);
        } else {
          _this->_impl_.MessageType_.commandresponse_->MergeFrom(from._internal_commandresponse());
        }
        break;
      }
      case MESSAGETYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExternalClient::CopyFrom(const ExternalClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.ExternalClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExternalClient::InternalSwap(ExternalClient* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.MessageType_, other->_impl_.MessageType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ExternalClient::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Connect::_Internal {
 public:
};

void Connect::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
Connect::Connect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.Connect)
}
inline PROTOBUF_NDEBUG_INLINE Connect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::Connect& from_msg)
      : devices_{visibility, arena, from.devices_},
        sessionid_(arena, from.sessionid_),
        company_(arena, from.company_),
        vehiclename_(arena, from.vehiclename_),
        _cached_size_{0} {}

Connect::Connect(
    ::google::protobuf::Arena* arena,
    const Connect& from)
    : ::google::protobuf::Message(arena) {
  Connect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.Connect)
}
inline PROTOBUF_NDEBUG_INLINE Connect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        sessionid_(arena),
        company_(arena),
        vehiclename_(arena),
        _cached_size_{0} {}

inline void Connect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Connect::~Connect() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.Connect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Connect::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  _impl_.company_.Destroy();
  _impl_.vehiclename_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Connect::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Connect, _impl_._cached_size_),
              false,
          },
          &Connect::MergeImpl,
          &Connect::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 60, 2> Connect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Connect_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::Connect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .InternalProtocol.Device devices = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.devices_)}},
    // string sessionId = 1 [features = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.sessionid_)}},
    // string company = 2 [features = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.company_)}},
    // string vehicleName = 3 [features = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Connect, _impl_.vehiclename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sessionId = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string company = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.company_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string vehicleName = 3 [features = {
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.vehiclename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .InternalProtocol.Device devices = 4;
    {PROTOBUF_FIELD_OFFSET(Connect, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::Device>()},
  }}, {{
    "\30\11\7\13\0\0\0\0"
    "ExternalProtocol.Connect"
    "sessionId"
    "company"
    "vehicleName"
  }},
};

PROTOBUF_NOINLINE void Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.Connect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _impl_.sessionid_.ClearToEmpty();
  _impl_.company_.ClearToEmpty();
  _impl_.vehiclename_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Connect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.Connect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.Connect.sessionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string company = 2 [features = {
  if (!this->_internal_company().empty()) {
    const std::string& _s = this->_internal_company();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.Connect.company");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string vehicleName = 3 [features = {
  if (!this->_internal_vehiclename().empty()) {
    const std::string& _s = this->_internal_vehiclename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.Connect.vehicleName");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .InternalProtocol.Device devices = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_devices_size());
       i < n; i++) {
    const auto& repfield = this->_internal_devices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.Connect)
  return target;
}

::size_t Connect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.Connect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .InternalProtocol.Device devices = 4;
  total_size += 1UL * this->_internal_devices_size();
  for (const auto& msg : this->_internal_devices()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  // string company = 2 [features = {
  if (!this->_internal_company().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_company());
  }

  // string vehicleName = 3 [features = {
  if (!this->_internal_vehiclename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_vehiclename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Connect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Connect*>(&to_msg);
  auto& from = static_cast<const Connect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.Connect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (!from._internal_company().empty()) {
    _this->_internal_set_company(from._internal_company());
  }
  if (!from._internal_vehiclename().empty()) {
    _this->_internal_set_vehiclename(from._internal_vehiclename());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Connect::CopyFrom(const Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Connect::InternalSwap(Connect* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_, &other->_impl_.company_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vehiclename_, &other->_impl_.vehiclename_, arena);
}

::google::protobuf::Metadata Connect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConnectResponse::_Internal {
 public:
};

ConnectResponse::ConnectResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.ConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::ConnectResponse& from_msg)
      : sessionid_(arena, from.sessionid_),
        _cached_size_{0} {}

ConnectResponse::ConnectResponse(
    ::google::protobuf::Arena* arena,
    const ConnectResponse& from)
    : ::google::protobuf::Message(arena) {
  ConnectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.ConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sessionid_(arena),
        _cached_size_{0} {}

inline void ConnectResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
ConnectResponse::~ConnectResponse() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.ConnectResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConnectResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ConnectResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_._cached_size_),
              false,
          },
          &ConnectResponse::MergeImpl,
          &ConnectResponse::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2> ConnectResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ConnectResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::ConnectResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ExternalProtocol.ConnectResponse.Type type = 2 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectResponse, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.type_)}},
    // string sessionId = 1 [features = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.sessionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sessionId = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ExternalProtocol.ConnectResponse.Type type = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(ConnectResponse, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\40\11\0\0\0\0\0\0"
    "ExternalProtocol.ConnectResponse"
    "sessionId"
  }},
};

PROTOBUF_NOINLINE void ConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.ConnectResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ConnectResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.ConnectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.ConnectResponse.sessionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .ExternalProtocol.ConnectResponse.Type type = 2 [features = {
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.ConnectResponse)
  return target;
}

::size_t ConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.ConnectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  // .ExternalProtocol.ConnectResponse.Type type = 2 [features = {
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ConnectResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectResponse*>(&to_msg);
  auto& from = static_cast<const ConnectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.ConnectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectResponse::CopyFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConnectResponse::InternalSwap(ConnectResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata ConnectResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Status::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Status>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_);
};

void Status::clear_devicestatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.devicestatus_ != nullptr) _impl_.devicestatus_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Status::Status(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::Status& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sessionid_(arena, from.sessionid_),
        errormessage_(arena, from.errormessage_) {}

Status::Status(
    ::google::protobuf::Arena* arena,
    const Status& from)
    : ::google::protobuf::Message(arena) {
  Status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.devicestatus_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceStatus>(
                              arena, *from._impl_.devicestatus_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, devicestate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, devicestate_),
           offsetof(Impl_, messagecounter_) -
               offsetof(Impl_, devicestate_) +
               sizeof(Impl_::messagecounter_));

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.Status)
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sessionid_(arena),
        errormessage_(arena) {}

inline void Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, devicestatus_),
           0,
           offsetof(Impl_, messagecounter_) -
               offsetof(Impl_, devicestatus_) +
               sizeof(Impl_::messagecounter_));
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.Status)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Status::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  _impl_.errormessage_.Destroy();
  delete _impl_.devicestatus_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Status::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Status, _impl_._cached_size_),
              false,
          },
          &Status::MergeImpl,
          &Status::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 41, 2> Status::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Status, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Status_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::Status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sessionId = 1 [features = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.sessionid_)}},
    // .ExternalProtocol.Status.DeviceState deviceState = 2 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.devicestate_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.devicestate_)}},
    // uint32 messageCounter = 3 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.messagecounter_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.messagecounter_)}},
    // .InternalProtocol.DeviceStatus deviceStatus = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.devicestatus_)}},
    // bytes errorMessage = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.errormessage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string sessionId = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.sessionid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ExternalProtocol.Status.DeviceState deviceState = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.devicestate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 messageCounter = 3 [features = {
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.messagecounter_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .InternalProtocol.DeviceStatus deviceStatus = 4;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.devicestatus_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes errorMessage = 5;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.errormessage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::DeviceStatus>()},
  }}, {{
    "\27\11\0\0\0\0\0\0"
    "ExternalProtocol.Status"
    "sessionId"
  }},
};

PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.Status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.errormessage_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.devicestatus_ != nullptr);
      _impl_.devicestatus_->Clear();
    }
  }
  ::memset(&_impl_.devicestate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.messagecounter_) -
      reinterpret_cast<char*>(&_impl_.devicestate_)) + sizeof(_impl_.messagecounter_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Status::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.Status.sessionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .ExternalProtocol.Status.DeviceState deviceState = 2 [features = {
  if (this->_internal_devicestate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_devicestate(), target);
  }

  // uint32 messageCounter = 3 [features = {
  if (this->_internal_messagecounter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_messagecounter(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .InternalProtocol.DeviceStatus deviceStatus = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.devicestatus_, _impl_.devicestatus_->GetCachedSize(), target, stream);
  }

  // bytes errorMessage = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_errormessage();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.Status)
  return target;
}

::size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // bytes errorMessage = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_errormessage());
    }

    // .InternalProtocol.DeviceStatus deviceStatus = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.devicestatus_);
    }

  }
  // .ExternalProtocol.Status.DeviceState deviceState = 2 [features = {
  if (this->_internal_devicestate() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_devicestate());
  }

  // uint32 messageCounter = 3 [features = {
  if (this->_internal_messagecounter() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_messagecounter());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_errormessage(from._internal_errormessage());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.devicestatus_ != nullptr);
      if (_this->_impl_.devicestatus_ == nullptr) {
        _this->_impl_.devicestatus_ =
            ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceStatus>(arena, *from._impl_.devicestatus_);
      } else {
        _this->_impl_.devicestatus_->MergeFrom(*from._impl_.devicestatus_);
      }
    }
  }
  if (from._internal_devicestate() != 0) {
    _this->_impl_.devicestate_ = from._impl_.devicestate_;
  }
  if (from._internal_messagecounter() != 0) {
    _this->_impl_.messagecounter_ = from._impl_.messagecounter_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Status::InternalSwap(Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errormessage_, &other->_impl_.errormessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, _impl_.messagecounter_)
      + sizeof(Status::_impl_.messagecounter_)
      - PROTOBUF_FIELD_OFFSET(Status, _impl_.devicestatus_)>(
          reinterpret_cast<char*>(&_impl_.devicestatus_),
          reinterpret_cast<char*>(&other->_impl_.devicestatus_));
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusResponse::_Internal {
 public:
};

StatusResponse::StatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.StatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::StatusResponse& from_msg)
      : sessionid_(arena, from.sessionid_),
        _cached_size_{0} {}

StatusResponse::StatusResponse(
    ::google::protobuf::Arena* arena,
    const StatusResponse& from)
    : ::google::protobuf::Message(arena) {
  StatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, messagecounter_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::messagecounter_));

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.StatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sessionid_(arena),
        _cached_size_{0} {}

inline void StatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, messagecounter_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::messagecounter_));
}
StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.StatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StatusResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_._cached_size_),
              false,
          },
          &StatusResponse::MergeImpl,
          &StatusResponse::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 49, 2> StatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StatusResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::StatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sessionId = 1 [features = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.sessionid_)}},
    // .ExternalProtocol.StatusResponse.Type type = 2 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StatusResponse, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.type_)}},
    // uint32 messageCounter = 3 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StatusResponse, _impl_.messagecounter_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.messagecounter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sessionId = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ExternalProtocol.StatusResponse.Type type = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 messageCounter = 3 [features = {
    {PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.messagecounter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\37\11\0\0\0\0\0\0"
    "ExternalProtocol.StatusResponse"
    "sessionId"
  }},
};

PROTOBUF_NOINLINE void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.StatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.messagecounter_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.messagecounter_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.StatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.StatusResponse.sessionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .ExternalProtocol.StatusResponse.Type type = 2 [features = {
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // uint32 messageCounter = 3 [features = {
  if (this->_internal_messagecounter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_messagecounter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.StatusResponse)
  return target;
}

::size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.StatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  // .ExternalProtocol.StatusResponse.Type type = 2 [features = {
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // uint32 messageCounter = 3 [features = {
  if (this->_internal_messagecounter() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_messagecounter());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatusResponse*>(&to_msg);
  auto& from = static_cast<const StatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.StatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_messagecounter() != 0) {
    _this->_impl_.messagecounter_ = from._impl_.messagecounter_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatusResponse::InternalSwap(StatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.messagecounter_)
      + sizeof(StatusResponse::_impl_.messagecounter_)
      - PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata StatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Command::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Command>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Command, _impl_._has_bits_);
};

void Command::clear_devicecommand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.devicecommand_ != nullptr) _impl_.devicecommand_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Command::Command(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.Command)
}
inline PROTOBUF_NDEBUG_INLINE Command::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::Command& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sessionid_(arena, from.sessionid_) {}

Command::Command(
    ::google::protobuf::Arena* arena,
    const Command& from)
    : ::google::protobuf::Message(arena) {
  Command* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.devicecommand_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceCommand>(
                              arena, *from._impl_.devicecommand_)
                        : nullptr;
  _impl_.messagecounter_ = from._impl_.messagecounter_;

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.Command)
}
inline PROTOBUF_NDEBUG_INLINE Command::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sessionid_(arena) {}

inline void Command::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, devicecommand_),
           0,
           offsetof(Impl_, messagecounter_) -
               offsetof(Impl_, devicecommand_) +
               sizeof(Impl_::messagecounter_));
}
Command::~Command() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.Command)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Command::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  delete _impl_.devicecommand_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Command::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Command, _impl_._cached_size_),
              false,
          },
          &Command::MergeImpl,
          &Command::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 42, 2> Command::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Command, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Command_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::Command>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sessionId = 1 [features = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Command, _impl_.sessionid_)}},
    // uint32 messageCounter = 2 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Command, _impl_.messagecounter_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Command, _impl_.messagecounter_)}},
    // .InternalProtocol.DeviceCommand deviceCommand = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Command, _impl_.devicecommand_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sessionId = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.sessionid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 messageCounter = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.messagecounter_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .InternalProtocol.DeviceCommand deviceCommand = 3;
    {PROTOBUF_FIELD_OFFSET(Command, _impl_.devicecommand_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::DeviceCommand>()},
  }}, {{
    "\30\11\0\0\0\0\0\0"
    "ExternalProtocol.Command"
    "sessionId"
  }},
};

PROTOBUF_NOINLINE void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.Command)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.devicecommand_ != nullptr);
    _impl_.devicecommand_->Clear();
  }
  _impl_.messagecounter_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Command::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.Command)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.Command.sessionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 messageCounter = 2 [features = {
  if (this->_internal_messagecounter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_messagecounter(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .InternalProtocol.DeviceCommand deviceCommand = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.devicecommand_, _impl_.devicecommand_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.Command)
  return target;
}

::size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.Command)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  // .InternalProtocol.DeviceCommand deviceCommand = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.devicecommand_);
  }

  // uint32 messageCounter = 2 [features = {
  if (this->_internal_messagecounter() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_messagecounter());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Command::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Command*>(&to_msg);
  auto& from = static_cast<const Command&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.Command)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.devicecommand_ != nullptr);
    if (_this->_impl_.devicecommand_ == nullptr) {
      _this->_impl_.devicecommand_ =
          ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceCommand>(arena, *from._impl_.devicecommand_);
    } else {
      _this->_impl_.devicecommand_->MergeFrom(*from._impl_.devicecommand_);
    }
  }
  if (from._internal_messagecounter() != 0) {
    _this->_impl_.messagecounter_ = from._impl_.messagecounter_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Command::InternalSwap(Command* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Command, _impl_.messagecounter_)
      + sizeof(Command::_impl_.messagecounter_)
      - PROTOBUF_FIELD_OFFSET(Command, _impl_.devicecommand_)>(
          reinterpret_cast<char*>(&_impl_.devicecommand_),
          reinterpret_cast<char*>(&other->_impl_.devicecommand_));
}

::google::protobuf::Metadata Command::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommandResponse::_Internal {
 public:
};

CommandResponse::CommandResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalProtocol.CommandResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommandResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ExternalProtocol::CommandResponse& from_msg)
      : sessionid_(arena, from.sessionid_),
        _cached_size_{0} {}

CommandResponse::CommandResponse(
    ::google::protobuf::Arena* arena,
    const CommandResponse& from)
    : ::google::protobuf::Message(arena) {
  CommandResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, messagecounter_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::messagecounter_));

  // @@protoc_insertion_point(copy_constructor:ExternalProtocol.CommandResponse)
}
inline PROTOBUF_NDEBUG_INLINE CommandResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sessionid_(arena),
        _cached_size_{0} {}

inline void CommandResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, messagecounter_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::messagecounter_));
}
CommandResponse::~CommandResponse() {
  // @@protoc_insertion_point(destructor:ExternalProtocol.CommandResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommandResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sessionid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CommandResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_._cached_size_),
              false,
          },
          &CommandResponse::MergeImpl,
          &CommandResponse::kDescriptorMethods,
          &descriptor_table_ExternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 50, 2> CommandResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CommandResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ExternalProtocol::CommandResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sessionId = 1 [features = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.sessionid_)}},
    // .ExternalProtocol.CommandResponse.Type type = 2 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandResponse, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.type_)}},
    // uint32 messageCounter = 3 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandResponse, _impl_.messagecounter_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.messagecounter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sessionId = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.sessionid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ExternalProtocol.CommandResponse.Type type = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 messageCounter = 3 [features = {
    {PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.messagecounter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\40\11\0\0\0\0\0\0"
    "ExternalProtocol.CommandResponse"
    "sessionId"
  }},
};

PROTOBUF_NOINLINE void CommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalProtocol.CommandResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessionid_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.messagecounter_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.messagecounter_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CommandResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalProtocol.CommandResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ExternalProtocol.CommandResponse.sessionId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .ExternalProtocol.CommandResponse.Type type = 2 [features = {
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // uint32 messageCounter = 3 [features = {
  if (this->_internal_messagecounter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_messagecounter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalProtocol.CommandResponse)
  return target;
}

::size_t CommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalProtocol.CommandResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string sessionId = 1 [features = {
  if (!this->_internal_sessionid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sessionid());
  }

  // .ExternalProtocol.CommandResponse.Type type = 2 [features = {
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // uint32 messageCounter = 3 [features = {
  if (this->_internal_messagecounter() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_messagecounter());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CommandResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommandResponse*>(&to_msg);
  auto& from = static_cast<const CommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ExternalProtocol.CommandResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sessionid().empty()) {
    _this->_internal_set_sessionid(from._internal_sessionid());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_messagecounter() != 0) {
    _this->_impl_.messagecounter_ = from._impl_.messagecounter_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandResponse::CopyFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalProtocol.CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommandResponse::InternalSwap(CommandResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.messagecounter_)
      + sizeof(CommandResponse::_impl_.messagecounter_)
      - PROTOBUF_FIELD_OFFSET(CommandResponse, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata CommandResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ExternalProtocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ExternalProtocol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
