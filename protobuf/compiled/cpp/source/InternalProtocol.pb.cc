// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: InternalProtocol.proto
// Protobuf C++ Version: 5.27.2

#include "InternalProtocol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace InternalProtocol {

inline constexpr Device::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devicerole_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        devicename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        module_{static_cast< ::InternalProtocol::Device_Module >(0)},
        devicetype_{0u},
        priority_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Device::Device(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceDefaultTypeInternal() {}
  union {
    Device _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceDefaultTypeInternal _Device_default_instance_;

inline constexpr DeviceStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        statusdata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceStatus::DeviceStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceStatusDefaultTypeInternal() {}
  union {
    DeviceStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceStatusDefaultTypeInternal _DeviceStatus_default_instance_;

inline constexpr DeviceConnectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr},
        responsetype_{static_cast< ::InternalProtocol::DeviceConnectResponse_ResponseType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceConnectResponse::DeviceConnectResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceConnectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceConnectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceConnectResponseDefaultTypeInternal() {}
  union {
    DeviceConnectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceConnectResponseDefaultTypeInternal _DeviceConnectResponse_default_instance_;

inline constexpr DeviceConnect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceConnect::DeviceConnect(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceConnectDefaultTypeInternal() {}
  union {
    DeviceConnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceConnectDefaultTypeInternal _DeviceConnect_default_instance_;

inline constexpr DeviceCommand::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commanddata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceCommand::DeviceCommand(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceCommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceCommandDefaultTypeInternal() {}
  union {
    DeviceCommand _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceCommandDefaultTypeInternal _DeviceCommand_default_instance_;

inline constexpr InternalServer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR InternalServer::InternalServer(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InternalServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternalServerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternalServerDefaultTypeInternal() {}
  union {
    InternalServer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternalServerDefaultTypeInternal _InternalServer_default_instance_;

inline constexpr InternalClient::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR InternalClient::InternalClient(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InternalClientDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternalClientDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternalClientDefaultTypeInternal() {}
  union {
    InternalClient _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternalClientDefaultTypeInternal _InternalClient_default_instance_;
}  // namespace InternalProtocol
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_InternalProtocol_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_InternalProtocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_InternalProtocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalClient, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalClient, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalClient, _impl_.MessageType_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalServer, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalServer, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalServer, _impl_.MessageType_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceConnect, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceConnect, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceConnect, _impl_.device_),
        0,
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceConnectResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceConnectResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceConnectResponse, _impl_.responsetype_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceConnectResponse, _impl_.device_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceStatus, _impl_.device_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceStatus, _impl_.statusdata_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceCommand, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceCommand, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceCommand, _impl_.device_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::DeviceCommand, _impl_.commanddata_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::Device, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::Device, _impl_.module_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::Device, _impl_.devicetype_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::Device, _impl_.devicerole_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::Device, _impl_.devicename_),
        PROTOBUF_FIELD_OFFSET(::InternalProtocol::Device, _impl_.priority_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::InternalProtocol::InternalClient)},
        {11, -1, -1, sizeof(::InternalProtocol::InternalServer)},
        {22, 31, -1, sizeof(::InternalProtocol::DeviceConnect)},
        {32, 42, -1, sizeof(::InternalProtocol::DeviceConnectResponse)},
        {44, 54, -1, sizeof(::InternalProtocol::DeviceStatus)},
        {56, 66, -1, sizeof(::InternalProtocol::DeviceCommand)},
        {68, -1, -1, sizeof(::InternalProtocol::Device)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::InternalProtocol::_InternalClient_default_instance_._instance,
    &::InternalProtocol::_InternalServer_default_instance_._instance,
    &::InternalProtocol::_DeviceConnect_default_instance_._instance,
    &::InternalProtocol::_DeviceConnectResponse_default_instance_._instance,
    &::InternalProtocol::_DeviceStatus_default_instance_._instance,
    &::InternalProtocol::_DeviceCommand_default_instance_._instance,
    &::InternalProtocol::_Device_default_instance_._instance,
};
const char descriptor_table_protodef_InternalProtocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026InternalProtocol.proto\022\020InternalProtoc"
    "ol\"\221\001\n\016InternalClient\0228\n\rdeviceConnect\030\001"
    " \001(\0132\037.InternalProtocol.DeviceConnectH\000\022"
    "6\n\014deviceStatus\030\002 \001(\0132\036.InternalProtocol"
    ".DeviceStatusH\000B\r\n\013MessageType\"\243\001\n\016Inter"
    "nalServer\022H\n\025deviceConnectResponse\030\001 \001(\013"
    "2\'.InternalProtocol.DeviceConnectRespons"
    "eH\000\0228\n\rdeviceCommand\030\002 \001(\0132\037.InternalPro"
    "tocol.DeviceCommandH\000B\r\n\013MessageType\"9\n\r"
    "DeviceConnect\022(\n\006device\030\001 \001(\0132\030.Internal"
    "Protocol.Device\"\237\002\n\025DeviceConnectRespons"
    "e\022Q\n\014responseType\030\001 \001(\01624.InternalProtoc"
    "ol.DeviceConnectResponse.ResponseTypeB\005\252"
    "\001\002\010\002\022(\n\006device\030\002 \001(\0132\030.InternalProtocol."
    "Device\"\210\001\n\014ResponseType\022\006\n\002OK\020\000\022\025\n\021ALREA"
    "DY_CONNECTED\020\001\022\030\n\024MODULE_NOT_SUPPORTED\020\002"
    "\022\030\n\024DEVICE_NOT_SUPPORTED\020\003\022%\n!HIGHER_PRI"
    "ORITY_ALREADY_CONNECTED\020\004\"S\n\014DeviceStatu"
    "s\022(\n\006device\030\001 \001(\0132\030.InternalProtocol.Dev"
    "ice\022\031\n\nstatusData\030\002 \001(\014B\005\252\001\002\010\002\"U\n\rDevice"
    "Command\022(\n\006device\030\001 \001(\0132\030.InternalProtoc"
    "ol.Device\022\032\n\013commandData\030\002 \001(\014B\005\252\001\002\010\002\"\210\002"
    "\n\006Device\0226\n\006module\030\001 \001(\0162\037.InternalProto"
    "col.Device.ModuleB\005\252\001\002\010\002\022\031\n\ndeviceType\030\002"
    " \001(\rB\005\252\001\002\010\002\022\031\n\ndeviceRole\030\003 \001(\tB\005\252\001\002\010\002\022\031"
    "\n\ndeviceName\030\004 \001(\tB\005\252\001\002\010\002\022\027\n\010priority\030\005 "
    "\001(\rB\005\252\001\002\010\002\"\\\n\006Module\022\023\n\017RESERVED_MODULE\020"
    "\000\022\022\n\016MISSION_MODULE\020\001\022\r\n\tIO_MODULE\020\002\022\023\n\016"
    "EXAMPLE_MODULE\020\350\007\"\005\010\003\020\347\007B>Z!../internal/"
    "pkg/ba_proto;ba_proto\252\002\030Google.Protobuf."
    "ba_protob\010editionsp\350\007"
};
static ::absl::once_flag descriptor_table_InternalProtocol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_InternalProtocol_2eproto = {
    false,
    false,
    1221,
    descriptor_table_protodef_InternalProtocol_2eproto,
    "InternalProtocol.proto",
    &descriptor_table_InternalProtocol_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_InternalProtocol_2eproto::offsets,
    file_level_enum_descriptors_InternalProtocol_2eproto,
    file_level_service_descriptors_InternalProtocol_2eproto,
};
namespace InternalProtocol {
const ::google::protobuf::EnumDescriptor* DeviceConnectResponse_ResponseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_InternalProtocol_2eproto);
  return file_level_enum_descriptors_InternalProtocol_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t DeviceConnectResponse_ResponseType_internal_data_[] = {
    327680u, 0u, };
bool DeviceConnectResponse_ResponseType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr DeviceConnectResponse_ResponseType DeviceConnectResponse::OK;
constexpr DeviceConnectResponse_ResponseType DeviceConnectResponse::ALREADY_CONNECTED;
constexpr DeviceConnectResponse_ResponseType DeviceConnectResponse::MODULE_NOT_SUPPORTED;
constexpr DeviceConnectResponse_ResponseType DeviceConnectResponse::DEVICE_NOT_SUPPORTED;
constexpr DeviceConnectResponse_ResponseType DeviceConnectResponse::HIGHER_PRIORITY_ALREADY_CONNECTED;
constexpr DeviceConnectResponse_ResponseType DeviceConnectResponse::ResponseType_MIN;
constexpr DeviceConnectResponse_ResponseType DeviceConnectResponse::ResponseType_MAX;
constexpr int DeviceConnectResponse::ResponseType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Device_Module_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_InternalProtocol_2eproto);
  return file_level_enum_descriptors_InternalProtocol_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Device_Module_internal_data_[] = {
    196608u, 65536u, 1000u, };
bool Device_Module_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Device_Module_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Device_Module Device::RESERVED_MODULE;
constexpr Device_Module Device::MISSION_MODULE;
constexpr Device_Module Device::IO_MODULE;
constexpr Device_Module Device::EXAMPLE_MODULE;
constexpr Device_Module Device::Module_MIN;
constexpr Device_Module Device::Module_MAX;
constexpr int Device::Module_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class InternalClient::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalClient, _impl_._oneof_case_);
};

void InternalClient::set_allocated_deviceconnect(::InternalProtocol::DeviceConnect* deviceconnect) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (deviceconnect) {
    ::google::protobuf::Arena* submessage_arena = deviceconnect->GetArena();
    if (message_arena != submessage_arena) {
      deviceconnect = ::google::protobuf::internal::GetOwnedMessage(message_arena, deviceconnect, submessage_arena);
    }
    set_has_deviceconnect();
    _impl_.MessageType_.deviceconnect_ = deviceconnect;
  }
  // @@protoc_insertion_point(field_set_allocated:InternalProtocol.InternalClient.deviceConnect)
}
void InternalClient::set_allocated_devicestatus(::InternalProtocol::DeviceStatus* devicestatus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (devicestatus) {
    ::google::protobuf::Arena* submessage_arena = devicestatus->GetArena();
    if (message_arena != submessage_arena) {
      devicestatus = ::google::protobuf::internal::GetOwnedMessage(message_arena, devicestatus, submessage_arena);
    }
    set_has_devicestatus();
    _impl_.MessageType_.devicestatus_ = devicestatus;
  }
  // @@protoc_insertion_point(field_set_allocated:InternalProtocol.InternalClient.deviceStatus)
}
InternalClient::InternalClient(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InternalProtocol.InternalClient)
}
inline PROTOBUF_NDEBUG_INLINE InternalClient::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::InternalProtocol::InternalClient& from_msg)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

InternalClient::InternalClient(
    ::google::protobuf::Arena* arena,
    const InternalClient& from)
    : ::google::protobuf::Message(arena) {
  InternalClient* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (MessageType_case()) {
    case MESSAGETYPE_NOT_SET:
      break;
      case kDeviceConnect:
        _impl_.MessageType_.deviceconnect_ = ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceConnect>(arena, *from._impl_.MessageType_.deviceconnect_);
        break;
      case kDeviceStatus:
        _impl_.MessageType_.devicestatus_ = ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceStatus>(arena, *from._impl_.MessageType_.devicestatus_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:InternalProtocol.InternalClient)
}
inline PROTOBUF_NDEBUG_INLINE InternalClient::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void InternalClient::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InternalClient::~InternalClient() {
  // @@protoc_insertion_point(destructor:InternalProtocol.InternalClient)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InternalClient::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_MessageType()) {
    clear_MessageType();
  }
  _impl_.~Impl_();
}

void InternalClient::clear_MessageType() {
// @@protoc_insertion_point(one_of_clear_start:InternalProtocol.InternalClient)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (MessageType_case()) {
    case kDeviceConnect: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.deviceconnect_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.deviceconnect_);
      }
      break;
    }
    case kDeviceStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.devicestatus_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.devicestatus_);
      }
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGETYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
InternalClient::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(InternalClient, _impl_._cached_size_),
              false,
          },
          &InternalClient::MergeImpl,
          &InternalClient::kDescriptorMethods,
          &descriptor_table_InternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> InternalClient::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InternalClient_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::InternalProtocol::InternalClient>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .InternalProtocol.DeviceConnect deviceConnect = 1;
    {PROTOBUF_FIELD_OFFSET(InternalClient, _impl_.MessageType_.deviceconnect_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .InternalProtocol.DeviceStatus deviceStatus = 2;
    {PROTOBUF_FIELD_OFFSET(InternalClient, _impl_.MessageType_.devicestatus_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::DeviceConnect>()},
    {::_pbi::TcParser::GetTable<::InternalProtocol::DeviceStatus>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InternalClient::Clear() {
// @@protoc_insertion_point(message_clear_start:InternalProtocol.InternalClient)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_MessageType();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* InternalClient::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InternalProtocol.InternalClient)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (MessageType_case()) {
    case kDeviceConnect: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.MessageType_.deviceconnect_, _impl_.MessageType_.deviceconnect_->GetCachedSize(), target, stream);
      break;
    }
    case kDeviceStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.MessageType_.devicestatus_, _impl_.MessageType_.devicestatus_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InternalProtocol.InternalClient)
  return target;
}

::size_t InternalClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InternalProtocol.InternalClient)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (MessageType_case()) {
    // .InternalProtocol.DeviceConnect deviceConnect = 1;
    case kDeviceConnect: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.deviceconnect_);
      break;
    }
    // .InternalProtocol.DeviceStatus deviceStatus = 2;
    case kDeviceStatus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.devicestatus_);
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InternalClient::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InternalClient*>(&to_msg);
  auto& from = static_cast<const InternalClient&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:InternalProtocol.InternalClient)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_MessageType();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDeviceConnect: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.deviceconnect_ =
              ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceConnect>(arena, *from._impl_.MessageType_.deviceconnect_);
        } else {
          _this->_impl_.MessageType_.deviceconnect_->MergeFrom(from._internal_deviceconnect());
        }
        break;
      }
      case kDeviceStatus: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.devicestatus_ =
              ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceStatus>(arena, *from._impl_.MessageType_.devicestatus_);
        } else {
          _this->_impl_.MessageType_.devicestatus_->MergeFrom(from._internal_devicestatus());
        }
        break;
      }
      case MESSAGETYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InternalClient::CopyFrom(const InternalClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InternalProtocol.InternalClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InternalClient::InternalSwap(InternalClient* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.MessageType_, other->_impl_.MessageType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata InternalClient::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InternalServer::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::InternalProtocol::InternalServer, _impl_._oneof_case_);
};

void InternalServer::set_allocated_deviceconnectresponse(::InternalProtocol::DeviceConnectResponse* deviceconnectresponse) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (deviceconnectresponse) {
    ::google::protobuf::Arena* submessage_arena = deviceconnectresponse->GetArena();
    if (message_arena != submessage_arena) {
      deviceconnectresponse = ::google::protobuf::internal::GetOwnedMessage(message_arena, deviceconnectresponse, submessage_arena);
    }
    set_has_deviceconnectresponse();
    _impl_.MessageType_.deviceconnectresponse_ = deviceconnectresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:InternalProtocol.InternalServer.deviceConnectResponse)
}
void InternalServer::set_allocated_devicecommand(::InternalProtocol::DeviceCommand* devicecommand) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_MessageType();
  if (devicecommand) {
    ::google::protobuf::Arena* submessage_arena = devicecommand->GetArena();
    if (message_arena != submessage_arena) {
      devicecommand = ::google::protobuf::internal::GetOwnedMessage(message_arena, devicecommand, submessage_arena);
    }
    set_has_devicecommand();
    _impl_.MessageType_.devicecommand_ = devicecommand;
  }
  // @@protoc_insertion_point(field_set_allocated:InternalProtocol.InternalServer.deviceCommand)
}
InternalServer::InternalServer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InternalProtocol.InternalServer)
}
inline PROTOBUF_NDEBUG_INLINE InternalServer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::InternalProtocol::InternalServer& from_msg)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

InternalServer::InternalServer(
    ::google::protobuf::Arena* arena,
    const InternalServer& from)
    : ::google::protobuf::Message(arena) {
  InternalServer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (MessageType_case()) {
    case MESSAGETYPE_NOT_SET:
      break;
      case kDeviceConnectResponse:
        _impl_.MessageType_.deviceconnectresponse_ = ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceConnectResponse>(arena, *from._impl_.MessageType_.deviceconnectresponse_);
        break;
      case kDeviceCommand:
        _impl_.MessageType_.devicecommand_ = ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceCommand>(arena, *from._impl_.MessageType_.devicecommand_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:InternalProtocol.InternalServer)
}
inline PROTOBUF_NDEBUG_INLINE InternalServer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : MessageType_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void InternalServer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InternalServer::~InternalServer() {
  // @@protoc_insertion_point(destructor:InternalProtocol.InternalServer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InternalServer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_MessageType()) {
    clear_MessageType();
  }
  _impl_.~Impl_();
}

void InternalServer::clear_MessageType() {
// @@protoc_insertion_point(one_of_clear_start:InternalProtocol.InternalServer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (MessageType_case()) {
    case kDeviceConnectResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.deviceconnectresponse_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.deviceconnectresponse_);
      }
      break;
    }
    case kDeviceCommand: {
      if (GetArena() == nullptr) {
        delete _impl_.MessageType_.devicecommand_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.MessageType_.devicecommand_);
      }
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGETYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
InternalServer::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(InternalServer, _impl_._cached_size_),
              false,
          },
          &InternalServer::MergeImpl,
          &InternalServer::kDescriptorMethods,
          &descriptor_table_InternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> InternalServer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InternalServer_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::InternalProtocol::InternalServer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .InternalProtocol.DeviceConnectResponse deviceConnectResponse = 1;
    {PROTOBUF_FIELD_OFFSET(InternalServer, _impl_.MessageType_.deviceconnectresponse_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .InternalProtocol.DeviceCommand deviceCommand = 2;
    {PROTOBUF_FIELD_OFFSET(InternalServer, _impl_.MessageType_.devicecommand_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::DeviceConnectResponse>()},
    {::_pbi::TcParser::GetTable<::InternalProtocol::DeviceCommand>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InternalServer::Clear() {
// @@protoc_insertion_point(message_clear_start:InternalProtocol.InternalServer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_MessageType();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* InternalServer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InternalProtocol.InternalServer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (MessageType_case()) {
    case kDeviceConnectResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.MessageType_.deviceconnectresponse_, _impl_.MessageType_.deviceconnectresponse_->GetCachedSize(), target, stream);
      break;
    }
    case kDeviceCommand: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.MessageType_.devicecommand_, _impl_.MessageType_.devicecommand_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InternalProtocol.InternalServer)
  return target;
}

::size_t InternalServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InternalProtocol.InternalServer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (MessageType_case()) {
    // .InternalProtocol.DeviceConnectResponse deviceConnectResponse = 1;
    case kDeviceConnectResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.deviceconnectresponse_);
      break;
    }
    // .InternalProtocol.DeviceCommand deviceCommand = 2;
    case kDeviceCommand: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.MessageType_.devicecommand_);
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InternalServer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InternalServer*>(&to_msg);
  auto& from = static_cast<const InternalServer&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:InternalProtocol.InternalServer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_MessageType();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDeviceConnectResponse: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.deviceconnectresponse_ =
              ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceConnectResponse>(arena, *from._impl_.MessageType_.deviceconnectresponse_);
        } else {
          _this->_impl_.MessageType_.deviceconnectresponse_->MergeFrom(from._internal_deviceconnectresponse());
        }
        break;
      }
      case kDeviceCommand: {
        if (oneof_needs_init) {
          _this->_impl_.MessageType_.devicecommand_ =
              ::google::protobuf::Message::CopyConstruct<::InternalProtocol::DeviceCommand>(arena, *from._impl_.MessageType_.devicecommand_);
        } else {
          _this->_impl_.MessageType_.devicecommand_->MergeFrom(from._internal_devicecommand());
        }
        break;
      }
      case MESSAGETYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InternalServer::CopyFrom(const InternalServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InternalProtocol.InternalServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InternalServer::InternalSwap(InternalServer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.MessageType_, other->_impl_.MessageType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata InternalServer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceConnect::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceConnect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceConnect, _impl_._has_bits_);
};

DeviceConnect::DeviceConnect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InternalProtocol.DeviceConnect)
}
inline PROTOBUF_NDEBUG_INLINE DeviceConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::InternalProtocol::DeviceConnect& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeviceConnect::DeviceConnect(
    ::google::protobuf::Arena* arena,
    const DeviceConnect& from)
    : ::google::protobuf::Message(arena) {
  DeviceConnect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:InternalProtocol.DeviceConnect)
}
inline PROTOBUF_NDEBUG_INLINE DeviceConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceConnect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
DeviceConnect::~DeviceConnect() {
  // @@protoc_insertion_point(destructor:InternalProtocol.DeviceConnect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceConnect::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.device_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DeviceConnect::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DeviceConnect, _impl_._cached_size_),
              false,
          },
          &DeviceConnect::MergeImpl,
          &DeviceConnect::kDescriptorMethods,
          &descriptor_table_InternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DeviceConnect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceConnect, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceConnect_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::InternalProtocol::DeviceConnect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .InternalProtocol.Device device = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceConnect, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .InternalProtocol.Device device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceConnect, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::Device>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DeviceConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:InternalProtocol.DeviceConnect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DeviceConnect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InternalProtocol.DeviceConnect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .InternalProtocol.Device device = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.device_, _impl_.device_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InternalProtocol.DeviceConnect)
  return target;
}

::size_t DeviceConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InternalProtocol.DeviceConnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .InternalProtocol.Device device = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DeviceConnect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceConnect*>(&to_msg);
  auto& from = static_cast<const DeviceConnect&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:InternalProtocol.DeviceConnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceConnect::CopyFrom(const DeviceConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InternalProtocol.DeviceConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceConnect::InternalSwap(DeviceConnect* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata DeviceConnect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceConnectResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceConnectResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_._has_bits_);
};

DeviceConnectResponse::DeviceConnectResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InternalProtocol.DeviceConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::InternalProtocol::DeviceConnectResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeviceConnectResponse::DeviceConnectResponse(
    ::google::protobuf::Arena* arena,
    const DeviceConnectResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceConnectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(
                              arena, *from._impl_.device_)
                        : nullptr;
  _impl_.responsetype_ = from._impl_.responsetype_;

  // @@protoc_insertion_point(copy_constructor:InternalProtocol.DeviceConnectResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceConnectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceConnectResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_),
           0,
           offsetof(Impl_, responsetype_) -
               offsetof(Impl_, device_) +
               sizeof(Impl_::responsetype_));
}
DeviceConnectResponse::~DeviceConnectResponse() {
  // @@protoc_insertion_point(destructor:InternalProtocol.DeviceConnectResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceConnectResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.device_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DeviceConnectResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_._cached_size_),
              false,
          },
          &DeviceConnectResponse::MergeImpl,
          &DeviceConnectResponse::kDescriptorMethods,
          &descriptor_table_InternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DeviceConnectResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceConnectResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::InternalProtocol::DeviceConnectResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .InternalProtocol.Device device = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_.device_)}},
    // .InternalProtocol.DeviceConnectResponse.ResponseType responseType = 1 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceConnectResponse, _impl_.responsetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_.responsetype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .InternalProtocol.DeviceConnectResponse.ResponseType responseType = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_.responsetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .InternalProtocol.Device device = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::Device>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DeviceConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:InternalProtocol.DeviceConnectResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_.responsetype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DeviceConnectResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InternalProtocol.DeviceConnectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .InternalProtocol.DeviceConnectResponse.ResponseType responseType = 1 [features = {
  if (this->_internal_responsetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_responsetype(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .InternalProtocol.Device device = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.device_, _impl_.device_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InternalProtocol.DeviceConnectResponse)
  return target;
}

::size_t DeviceConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InternalProtocol.DeviceConnectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .InternalProtocol.Device device = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.device_);
  }

  // .InternalProtocol.DeviceConnectResponse.ResponseType responseType = 1 [features = {
  if (this->_internal_responsetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_responsetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DeviceConnectResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceConnectResponse*>(&to_msg);
  auto& from = static_cast<const DeviceConnectResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:InternalProtocol.DeviceConnectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  if (from._internal_responsetype() != 0) {
    _this->_impl_.responsetype_ = from._impl_.responsetype_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceConnectResponse::CopyFrom(const DeviceConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InternalProtocol.DeviceConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceConnectResponse::InternalSwap(DeviceConnectResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_.responsetype_)
      + sizeof(DeviceConnectResponse::_impl_.responsetype_)
      - PROTOBUF_FIELD_OFFSET(DeviceConnectResponse, _impl_.device_)>(
          reinterpret_cast<char*>(&_impl_.device_),
          reinterpret_cast<char*>(&other->_impl_.device_));
}

::google::protobuf::Metadata DeviceConnectResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceStatus, _impl_._has_bits_);
};

DeviceStatus::DeviceStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InternalProtocol.DeviceStatus)
}
inline PROTOBUF_NDEBUG_INLINE DeviceStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::InternalProtocol::DeviceStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        statusdata_(arena, from.statusdata_) {}

DeviceStatus::DeviceStatus(
    ::google::protobuf::Arena* arena,
    const DeviceStatus& from)
    : ::google::protobuf::Message(arena) {
  DeviceStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:InternalProtocol.DeviceStatus)
}
inline PROTOBUF_NDEBUG_INLINE DeviceStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        statusdata_(arena) {}

inline void DeviceStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
DeviceStatus::~DeviceStatus() {
  // @@protoc_insertion_point(destructor:InternalProtocol.DeviceStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.statusdata_.Destroy();
  delete _impl_.device_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DeviceStatus::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DeviceStatus, _impl_._cached_size_),
              false,
          },
          &DeviceStatus::MergeImpl,
          &DeviceStatus::kDescriptorMethods,
          &descriptor_table_InternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DeviceStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceStatus_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::InternalProtocol::DeviceStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes statusData = 2 [features = {
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceStatus, _impl_.statusdata_)}},
    // .InternalProtocol.Device device = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceStatus, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .InternalProtocol.Device device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceStatus, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes statusData = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(DeviceStatus, _impl_.statusdata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::Device>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DeviceStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:InternalProtocol.DeviceStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.statusdata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DeviceStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InternalProtocol.DeviceStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .InternalProtocol.Device device = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.device_, _impl_.device_->GetCachedSize(), target, stream);
  }

  // bytes statusData = 2 [features = {
  if (!this->_internal_statusdata().empty()) {
    const std::string& _s = this->_internal_statusdata();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InternalProtocol.DeviceStatus)
  return target;
}

::size_t DeviceStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InternalProtocol.DeviceStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes statusData = 2 [features = {
  if (!this->_internal_statusdata().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_statusdata());
  }

  // .InternalProtocol.Device device = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DeviceStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceStatus*>(&to_msg);
  auto& from = static_cast<const DeviceStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:InternalProtocol.DeviceStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_statusdata().empty()) {
    _this->_internal_set_statusdata(from._internal_statusdata());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceStatus::CopyFrom(const DeviceStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InternalProtocol.DeviceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceStatus::InternalSwap(DeviceStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.statusdata_, &other->_impl_.statusdata_, arena);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata DeviceStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceCommand::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceCommand>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceCommand, _impl_._has_bits_);
};

DeviceCommand::DeviceCommand(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InternalProtocol.DeviceCommand)
}
inline PROTOBUF_NDEBUG_INLINE DeviceCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::InternalProtocol::DeviceCommand& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        commanddata_(arena, from.commanddata_) {}

DeviceCommand::DeviceCommand(
    ::google::protobuf::Arena* arena,
    const DeviceCommand& from)
    : ::google::protobuf::Message(arena) {
  DeviceCommand* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:InternalProtocol.DeviceCommand)
}
inline PROTOBUF_NDEBUG_INLINE DeviceCommand::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        commanddata_(arena) {}

inline void DeviceCommand::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
DeviceCommand::~DeviceCommand() {
  // @@protoc_insertion_point(destructor:InternalProtocol.DeviceCommand)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceCommand::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.commanddata_.Destroy();
  delete _impl_.device_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DeviceCommand::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(DeviceCommand, _impl_._cached_size_),
              false,
          },
          &DeviceCommand::MergeImpl,
          &DeviceCommand::kDescriptorMethods,
          &descriptor_table_InternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DeviceCommand::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceCommand, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceCommand_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::InternalProtocol::DeviceCommand>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes commandData = 2 [features = {
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceCommand, _impl_.commanddata_)}},
    // .InternalProtocol.Device device = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceCommand, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .InternalProtocol.Device device = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceCommand, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes commandData = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(DeviceCommand, _impl_.commanddata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::InternalProtocol::Device>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DeviceCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:InternalProtocol.DeviceCommand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commanddata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DeviceCommand::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InternalProtocol.DeviceCommand)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .InternalProtocol.Device device = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.device_, _impl_.device_->GetCachedSize(), target, stream);
  }

  // bytes commandData = 2 [features = {
  if (!this->_internal_commanddata().empty()) {
    const std::string& _s = this->_internal_commanddata();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InternalProtocol.DeviceCommand)
  return target;
}

::size_t DeviceCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InternalProtocol.DeviceCommand)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes commandData = 2 [features = {
  if (!this->_internal_commanddata().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_commanddata());
  }

  // .InternalProtocol.Device device = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DeviceCommand::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceCommand*>(&to_msg);
  auto& from = static_cast<const DeviceCommand&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:InternalProtocol.DeviceCommand)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_commanddata().empty()) {
    _this->_internal_set_commanddata(from._internal_commanddata());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::InternalProtocol::Device>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceCommand::CopyFrom(const DeviceCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InternalProtocol.DeviceCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceCommand::InternalSwap(DeviceCommand* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.commanddata_, &other->_impl_.commanddata_, arena);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata DeviceCommand::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Device::_Internal {
 public:
};

Device::Device(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:InternalProtocol.Device)
}
inline PROTOBUF_NDEBUG_INLINE Device::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::InternalProtocol::Device& from_msg)
      : devicerole_(arena, from.devicerole_),
        devicename_(arena, from.devicename_),
        _cached_size_{0} {}

Device::Device(
    ::google::protobuf::Arena* arena,
    const Device& from)
    : ::google::protobuf::Message(arena) {
  Device* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, module_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, module_),
           offsetof(Impl_, priority_) -
               offsetof(Impl_, module_) +
               sizeof(Impl_::priority_));

  // @@protoc_insertion_point(copy_constructor:InternalProtocol.Device)
}
inline PROTOBUF_NDEBUG_INLINE Device::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devicerole_(arena),
        devicename_(arena),
        _cached_size_{0} {}

inline void Device::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, module_),
           0,
           offsetof(Impl_, priority_) -
               offsetof(Impl_, module_) +
               sizeof(Impl_::priority_));
}
Device::~Device() {
  // @@protoc_insertion_point(destructor:InternalProtocol.Device)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Device::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.devicerole_.Destroy();
  _impl_.devicename_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Device::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Device, _impl_._cached_size_),
              false,
          },
          &Device::MergeImpl,
          &Device::kDescriptorMethods,
          &descriptor_table_InternalProtocol_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 52, 2> Device::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Device_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::InternalProtocol::Device>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .InternalProtocol.Device.Module module = 1 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Device, _impl_.module_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.module_)}},
    // uint32 deviceType = 2 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Device, _impl_.devicetype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.devicetype_)}},
    // string deviceRole = 3 [features = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.devicerole_)}},
    // string deviceName = 4 [features = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.devicename_)}},
    // uint32 priority = 5 [features = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Device, _impl_.priority_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Device, _impl_.priority_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .InternalProtocol.Device.Module module = 1 [features = {
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.module_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 deviceType = 2 [features = {
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.devicetype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string deviceRole = 3 [features = {
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.devicerole_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string deviceName = 4 [features = {
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.devicename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 priority = 5 [features = {
    {PROTOBUF_FIELD_OFFSET(Device, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\27\0\0\12\12\0\0\0"
    "InternalProtocol.Device"
    "deviceRole"
    "deviceName"
  }},
};

PROTOBUF_NOINLINE void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:InternalProtocol.Device)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devicerole_.ClearToEmpty();
  _impl_.devicename_.ClearToEmpty();
  ::memset(&_impl_.module_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.priority_) -
      reinterpret_cast<char*>(&_impl_.module_)) + sizeof(_impl_.priority_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Device::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InternalProtocol.Device)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .InternalProtocol.Device.Module module = 1 [features = {
  if (this->_internal_module() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_module(), target);
  }

  // uint32 deviceType = 2 [features = {
  if (this->_internal_devicetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_devicetype(), target);
  }

  // string deviceRole = 3 [features = {
  if (!this->_internal_devicerole().empty()) {
    const std::string& _s = this->_internal_devicerole();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "InternalProtocol.Device.deviceRole");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string deviceName = 4 [features = {
  if (!this->_internal_devicename().empty()) {
    const std::string& _s = this->_internal_devicename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "InternalProtocol.Device.deviceName");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // uint32 priority = 5 [features = {
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InternalProtocol.Device)
  return target;
}

::size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InternalProtocol.Device)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string deviceRole = 3 [features = {
  if (!this->_internal_devicerole().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_devicerole());
  }

  // string deviceName = 4 [features = {
  if (!this->_internal_devicename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_devicename());
  }

  // .InternalProtocol.Device.Module module = 1 [features = {
  if (this->_internal_module() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_module());
  }

  // uint32 deviceType = 2 [features = {
  if (this->_internal_devicetype() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_devicetype());
  }

  // uint32 priority = 5 [features = {
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Device::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Device*>(&to_msg);
  auto& from = static_cast<const Device&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:InternalProtocol.Device)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_devicerole().empty()) {
    _this->_internal_set_devicerole(from._internal_devicerole());
  }
  if (!from._internal_devicename().empty()) {
    _this->_internal_set_devicename(from._internal_devicename());
  }
  if (from._internal_module() != 0) {
    _this->_impl_.module_ = from._impl_.module_;
  }
  if (from._internal_devicetype() != 0) {
    _this->_impl_.devicetype_ = from._impl_.devicetype_;
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InternalProtocol.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Device::InternalSwap(Device* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.devicerole_, &other->_impl_.devicerole_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.devicename_, &other->_impl_.devicename_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Device, _impl_.priority_)
      + sizeof(Device::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(Device, _impl_.module_)>(
          reinterpret_cast<char*>(&_impl_.module_),
          reinterpret_cast<char*>(&other->_impl_.module_));
}

::google::protobuf::Metadata Device::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace InternalProtocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_InternalProtocol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
